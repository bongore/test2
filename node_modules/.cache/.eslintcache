[{"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\index.js":"1","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\App.js":"2","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\reportWebVitals.js":"3","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\login.jsx":"4","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\contracts.jsx":"5","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\list_quiz_top.jsx":"6","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\create_quiz.jsx":"7","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\user_page.jsx":"8","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\admin.jsx":"9","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\navbar\\navbar.jsx":"10","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\edit_list_top.jsx":"11","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\answer_quiz\\answer_quiz.jsx":"12","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\edit_quiz.jsx":"13","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\investment_page\\investment_page.jsx":"14","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\network.js":"15","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\config.jsx":"16","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\quiz_list.jsx":"17","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\wait_Modal.jsx":"18","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\quiz_simple.jsx":"19","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_select.jsx":"20","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\navbar\\Modal_change_network.jsx":"21","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\user_card.jsx":"22","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\history_list.jsx":"23","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\add_teacher.jsx":"24","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\quiz_list.jsx":"25","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\add_student.jsx":"26","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\quiz_simple.jsx":"27","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_select.jsx":"28","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\view_results.jsx":"29","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\Modal.jsx":"30","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_form2.jsx":"31","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\history_simple.jsx":"32","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\change_user.jsx":"33","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_form1.jsx":"34","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_form2.jsx":"35","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_form1.jsx":"36","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\Modal.jsx":"37","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\Answer.jsx":"38","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\Answer.jsx":"39"},{"size":561,"mtime":1744560586162,"results":"40","hashOfConfig":"41"},{"size":3533,"mtime":1744560586155,"results":"42","hashOfConfig":"41"},{"size":417,"mtime":1744560586223,"results":"43","hashOfConfig":"41"},{"size":1990,"mtime":1744560586162,"results":"44","hashOfConfig":"41"},{"size":31842,"mtime":1744560586157,"results":"45","hashOfConfig":"41"},{"size":2765,"mtime":1744560586208,"results":"46","hashOfConfig":"41"},{"size":8804,"mtime":1744560586179,"results":"47","hashOfConfig":"41"},{"size":3257,"mtime":1744560586214,"results":"48","hashOfConfig":"41"},{"size":3939,"mtime":1744560586173,"results":"49","hashOfConfig":"41"},{"size":5197,"mtime":1744560586214,"results":"50","hashOfConfig":"41"},{"size":3193,"mtime":1744560586193,"results":"51","hashOfConfig":"41"},{"size":8378,"mtime":1744560586178,"results":"52","hashOfConfig":"41"},{"size":8727,"mtime":1744560586193,"results":"53","hashOfConfig":"41"},{"size":6427,"mtime":1745200374055,"results":"54","hashOfConfig":"41"},{"size":396,"mtime":1744560586162,"results":"55","hashOfConfig":"41"},{"size":821,"mtime":1755770280268,"results":"56","hashOfConfig":"41"},{"size":3898,"mtime":1744560586207,"results":"57","hashOfConfig":"41"},{"size":2431,"mtime":1744560586162,"results":"58","hashOfConfig":"41"},{"size":7896,"mtime":1745371419631,"results":"59","hashOfConfig":"41"},{"size":1769,"mtime":1744560586179,"results":"60","hashOfConfig":"41"},{"size":1689,"mtime":1744560586211,"results":"61","hashOfConfig":"41"},{"size":6213,"mtime":1745370384450,"results":"62","hashOfConfig":"41"},{"size":3804,"mtime":1744560586214,"results":"63","hashOfConfig":"41"},{"size":1604,"mtime":1744560586173,"results":"64","hashOfConfig":"41"},{"size":3988,"mtime":1744560586190,"results":"65","hashOfConfig":"41"},{"size":1513,"mtime":1744560586173,"results":"66","hashOfConfig":"41"},{"size":8291,"mtime":1745371473272,"results":"67","hashOfConfig":"41"},{"size":1790,"mtime":1744560586193,"results":"68","hashOfConfig":"41"},{"size":4418,"mtime":1745203210519,"results":"69","hashOfConfig":"41"},{"size":903,"mtime":1744560586205,"results":"70","hashOfConfig":"41"},{"size":3225,"mtime":1744560586179,"results":"71","hashOfConfig":"41"},{"size":2395,"mtime":1745200908925,"results":"72","hashOfConfig":"41"},{"size":689,"mtime":1744560586214,"results":"73","hashOfConfig":"41"},{"size":4199,"mtime":1744560586179,"results":"74","hashOfConfig":"41"},{"size":3229,"mtime":1744560586193,"results":"75","hashOfConfig":"41"},{"size":4199,"mtime":1744560586193,"results":"76","hashOfConfig":"41"},{"size":903,"mtime":1744560586189,"results":"77","hashOfConfig":"41"},{"size":6063,"mtime":1744560586201,"results":"78","hashOfConfig":"41"},{"size":6063,"mtime":1744560586186,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ox6jpr",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\index.js",[],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\App.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],[],"import { useEffect, useState, useRef } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Nav_menu from \"./pages/navbar/navbar\";\r\nimport Login from \"./contract/login\";\r\nimport User_page from \"./pages/user_page/user_page\";\r\nimport Create_quiz from \"./pages/create_quiz/create_quiz\";\r\nimport List_quiz from \"./pages/list_quiz/list_quiz_top\";\r\nimport Answer_quiz from \"./pages/answer_quiz/answer_quiz\";\r\nimport Admin_page from \"./pages/admin_page/admin\";\r\nimport Edit_list from \"./pages/edit_list/edit_list_top\";\r\nimport Edit_quiz from \"./pages/edit_quiz/edit_quiz\";\r\nimport Investment_page from \"./pages/investment_page/investment_page\";\r\nimport { Contracts_MetaMask } from \"./contract/contracts\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n    const cont = new Contracts_MetaMask();\r\n    const is_teacher = cont.isTeacher();\r\n\r\n    const homeUrl = process.env.PUBLIC_URL;\r\n    console.log(homeUrl);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <body>\r\n                <div>\r\n                    <BrowserRouter basename={homeUrl}>\r\n                        <Routes>\r\n                            <Route path={\"/login\"} element={<Login url={\"login\"} cont={cont} />} />\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/user_page/:address\"} element={<User_page url={\"user_page\"} cont={cont} />} />\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/create_quiz\"} element={<Create_quiz url={\"create_quiz\"} cont={cont} />} />\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/list_quiz\"} element={<List_quiz url={\"list_quiz\"} cont={cont} />} />\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/answer_quiz/:id\"} element={<Answer_quiz url={\"answer_quiz\"} cont={cont} />} />\r\n                            quiz_comp\r\n                        </Routes>\r\n                        <Routes>\r\n                            {/* <Route path={'/answer_quiz/:id'} element={<Answer_quiz url={'answer_quiz'} />} cont={cont} /> */}\r\n                            <Route path={\"/admin\"} element={<Admin_page url={\"admin\"} cont={cont} />} />\r\n                            {/*<Route path={\"/admin\"} element={ is_teacher ? <Admin_page url={\"admin\"} cont={cont} /> : <Navigate replace to=\"/list_quiz\" />}/>*/}\r\n                            quiz_comp\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/edit_list\"} element={<Edit_list url={\"edit_list\"} cont={cont} />} />\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/edit_quiz/:id\"} element={<Edit_quiz url={\"edit_quiz\"} cont={cont} />} />\r\n                            quiz_comp\r\n                        </Routes>\r\n                        <Routes>\r\n                            <Route path={\"/investment_page/:id\"} element={<Investment_page url={\"investment_page\"} cont={cont} />} />\r\n                            quiz_comp\r\n                        </Routes>\r\n                    </BrowserRouter>\r\n                </div>\r\n                <div>\r\n                    <Nav_menu cont={cont} home={homeUrl} />\r\n                </div>\r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\reportWebVitals.js",[],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\login.jsx",["243","244","245","246","247","248","249","250","251","252","253","254"],[],"import { ethers } from \"ethers\";\r\n\r\nimport { BiLogIn } from \"react-icons/bi\";\r\nimport { chainId, rpc, bloctoSDK, quiz_address, token_address } from \"./config\";\r\nimport { useState } from \"react\";\r\nimport { ReactComponent as MetaMaskLogo } from \"./images/metamask-icon.svg\";\r\nimport { ReactComponent as BloctoLogo } from \"./images/blocto-icon.svg\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport \"./login.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\n//import BloctoSDK from \"@blocto/sdk\";\r\nconst { ethereum } = window;\r\n\r\nfunction Login() {\r\n    const [currentAccount, setCurrentAccount] = useState(true);\r\n    const [use_wallet, setUse_wallet] = useState(\"\");\r\n    const connect_MetamaskHandler = async () => {\r\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\r\n        console.log(\"Found an account! Address: \", accounts[0]);\r\n        setCurrentAccount(accounts[0]);\r\n        setUse_wallet(\"MetaMask\");\r\n    };\r\n\r\n    const Wallet_select = () => {\r\n        return (\r\n            <>\r\n                <h1>Connect Your Wallet</h1>\r\n                <ListGroup>\r\n                    <div\r\n                        onClick={() => {\r\n                            connect_MetamaskHandler();\r\n                        }}\r\n                    >\r\n                        <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\r\n                            <MetaMaskLogo style={{ width: \"36px\", height: \"36px\", fill: \"blue\" }} />\r\n                            MetaMask\r\n                            <Badge bg=\"primary\" pill>\r\n                                Popular\r\n                            </Badge>\r\n                        </ListGroup.Item>\r\n                    </div>\r\n                </ListGroup>\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <Wallet_select />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\contracts.jsx",["255","256","257","258","259","260","261","262","263","264","265","266"],[],"import { createPublicClient, createWalletClient, http, getContract, parseAbiItem, custom, UnauthorizedProviderError, decodeFunctionResult } from \"viem\";\r\nimport token_contract from \"./token_abi.json\";\r\nimport quiz_contract from \"./quiz_abi.json\";\r\nimport { chainId, rpc, quiz_address, token_address } from \"./config\";\r\nimport { amoy } from \"./network\";\r\n\r\nconst { ethereum } = window;\r\nconst homeUrl = process.env.PUBLIC_URL;\r\n\r\nconst walletClient = createWalletClient({\r\n    chain: amoy,\r\n    transport: custom(window.ethereum),\r\n});\r\n\r\nconst publicClient = createPublicClient({\r\n    chain: amoy,\r\n    transport: http(),\r\n});\r\n\r\nconst token_abi = token_contract.abi;\r\nconst quiz_abi = quiz_contract.abi;\r\n\r\nconst token = getContract({\r\n    address: token_address,\r\n    abi: token_abi,\r\n    walletClient,\r\n    publicClient,\r\n});\r\n\r\nconst quiz = getContract({\r\n    address: quiz_address,\r\n    abi: quiz_abi,\r\n    walletClient,\r\n    publicClient,\r\n});\r\n\r\nif (window.ethereum) {\r\n    window.ethereum.on(\"chainChanged\", () => {\r\n        window.location.reload();\r\n    });\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n        window.location.reload();\r\n    });\r\n}\r\n\r\nconst sliceByNumber = (array, number) => {\r\n    // 元の配列(今回で言うと変数arrayを指します)を基に、分割して生成する配列の個数を取得する処理です。\r\n    // 今回は元の配列の要素数が10個、分割して生成する配列は2つの要素を持つことを期待しています。\r\n    // 上記のことから今回は、元の配列から5つの配列に分割されることになります。\r\n    const length = Math.ceil(array.length / number);\r\n\r\n    // new Arrayの引数に上記で取得した配列の個数を渡します。これで配列の中に5つの配列が生成されます。\r\n    // 5つの配列分だけループ処理(mapメソッド)をします。map処理の中でsliceメソッドを使用して、元の配列から新しい配列を作成して返却します。\r\n    // sliceメソッドの中では、要素数2つの配列を生成します。\r\n    // fillメソッドはインデックスのキーを生成するために使用しています。もし使用しない場合はmapメソッドはindexがないため、mapメソッドが機能しません。\r\n    return new Array(length)\r\n        .fill()\r\n        .map((_, i) => array.slice(i * number, (i + 1) * number));\r\n};\r\n\r\nclass Contracts_MetaMask {\r\n    async get_chain_id() {\r\n        return await walletClient.getChainId();\r\n    }\r\n    async add_token_wallet() {\r\n        await window.ethereum.request({\r\n            method: \"wallet_watchAsset\",\r\n            params: {\r\n                type: \"ERC20\",\r\n                options: {\r\n                    address: token_address,\r\n                    symbol: \"Trial\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    async change_network() {\r\n        try {\r\n            await walletClient.switchChain({ id: amoy.id });\r\n        } catch (e) {\r\n            //userがrejectした場合\r\n            if (e.code === 4001) {\r\n                console.log(e);\r\n            } else {\r\n                this.add_network();\r\n            }\r\n        }\r\n    }\r\n    async add_network() {\r\n        try {\r\n            await walletClient.addChain({ chain: amoy });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async get_token_balance(address) {\r\n        try {\r\n            if (ethereum) {\r\n                console.log(token_address);\r\n                const balance = await token.read.balanceOf({ args: [address] });\r\n                console.log(balance);\r\n                console.log(Number(balance) / 10 ** 18);\r\n                //16進数を10進数に変換\r\n                return Number(balance) / 10 ** 18;\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_address() {\r\n        try {\r\n            if (ethereum) {\r\n                return (await walletClient.requestAddresses())[0];\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_token_history(address, start, end) {\r\n        console.log(address, start, end);\r\n        let account = await this.get_address();\r\n        try {\r\n            if (ethereum) {\r\n                console.log(token_address);\r\n                //取得したクイズを格納する配列\r\n                let res = [];\r\n\r\n                console.log(start, end);\r\n                if (start <= end) {\r\n                    for (let i = start; i < end; i++) {\r\n                        res.push(await token.read.get_user_history({ account, args: [address, i] }));\r\n                    }\r\n                } else {\r\n                    //console.log(\"33\");\r\n                    for (let i = start - 1; i >= end; i--) {\r\n                        res.push(await token.read.get_user_history({ account, args: [address, i] }));\r\n                    }\r\n                }\r\n\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_user_history_len(address) {\r\n        console.log(token_address);\r\n        let account = await this.get_address();\r\n        const res = await token.read.get_user_history_len({ account, args: [address] });\r\n        return Number(res);\r\n    }\r\n\r\n    //ユーザーのデータを取得する\r\n    async get_user_data(address) {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                console.log(token_address);\r\n                const res = await quiz.read.get_user({ account, args: [address] });\r\n                return [res[0], res[1], Number(res[2]), res[3]];\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async approve(account, amount) {\r\n        try {\r\n            if (ethereum) {\r\n                console.log(amount);\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: token_address,\r\n                        abi: token_abi,\r\n                        functionName: \"approve\",\r\n                        args: [quiz_address, amount],\r\n                    });\r\n                    console.log(\"成功\");\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async investment_to_quiz(id, amount, answer, isNotPayingOut, numOfStudent, isNotAddingReward, students) {\r\n        console.log([id, amount, isNotPayingOut, numOfStudent, isNotAddingReward]);\r\n        let res = null;\r\n        let res2 = null;\r\n        let hash = null;\r\n        let hash2 = null;\r\n        let is_not_paying_out = null;\r\n        let is_not_adding_reward = null;\r\n        amount = Number(amount) * 10 ** 18;\r\n\r\n        if (isNotPayingOut === \"false\") {\r\n            is_not_paying_out = false;\r\n        } else {\r\n            is_not_paying_out = true;\r\n        }\r\n        if (isNotAddingReward === \"false\") {\r\n            is_not_adding_reward = false;\r\n        } else {\r\n            is_not_adding_reward = true;\r\n        }\r\n\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\r\n                console.log(Number(approval));\r\n                console.log(amount * numOfStudent);\r\n\r\n                if (Number(approval) >= Number(amount * numOfStudent)) {\r\n                    hash = await this._investment_to_quiz(account, id, amount, numOfStudent);\r\n                    if (hash) {\r\n                        res = await publicClient.waitForTransactionReceipt({ hash });\r\n                    }\r\n                } else {\r\n                    hash = await this.approve(account, amount * numOfStudent);\r\n                    if (hash) {\r\n                        res = await publicClient.waitForTransactionReceipt({ hash });\r\n                        hash = await this._investment_to_quiz(account, id, amount, numOfStudent);\r\n                        console.log(hash);\r\n                        if (hash) {\r\n                            res = await publicClient.waitForTransactionReceipt({ hash });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (is_not_paying_out == false) {\r\n                    let addreses = sliceByNumber(students, 15);\r\n                    console.log(addreses)\r\n                    for (let i = 0; i < addreses.length; i++) {\r\n                        hash2 = await this._payment_of_reward(account, id, answer, addreses[i]);\r\n                        if (hash) {\r\n                            res2 = await publicClient.waitForTransactionReceipt({ hash });\r\n                        }\r\n                    }\r\n                    if (is_not_adding_reward == false) {\r\n                        let reward = (await this.get_quiz_simple(id))[7];\r\n                        console.log(reward);\r\n                        approval = await token.read.allowance({ account, args: [account, quiz_address] });\r\n                        console.log(approval);\r\n                        if (Number(approval) >= Number(reward)) {\r\n                            hash = await this._addingReward(account, id, reward);\r\n                            if (hash) {\r\n                                res = await publicClient.waitForTransactionReceipt({ hash });\r\n                            }\r\n                        } else {\r\n                            hash = await this.approve(account, reward);\r\n                            if (hash) {\r\n                                res = res = await publicClient.waitForTransactionReceipt({ hash });\r\n                                hash = await this._adding_reward(account, id, reward);\r\n                                if (hash) {\r\n                                    res = await publicClient.waitForTransactionReceipt({ hash });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        document.location.href = homeUrl + \"/edit_list\";\r\n    }\r\n\r\n    async _investment_to_quiz(account, id, amount, numOfStudent) {\r\n        console.log([account, id, amount, numOfStudent])\r\n        try {\r\n            if (ethereum) {\r\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"investment_to_quiz\",\r\n                        args: [id, amount.toString(), numOfStudent],\r\n                    });\r\n\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async _payment_of_reward(account, id, answer, students) {\r\n        console.log([account, id, answer, students]);\r\n        try {\r\n            if (ethereum) {\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"payment_of_reward\",\r\n                        args: [id, answer, students],\r\n                    });\r\n\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async _adding_reward(account, id, reward) {\r\n        console.log([account, id, reward]);\r\n        try {\r\n            if (ethereum) {\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"adding_reward\",\r\n                        args: [id],\r\n                    });\r\n\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async create_quiz(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit, setShow) {\r\n        setShow(true);\r\n        //console.log([title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit]);\r\n        let res = null;\r\n        let hash = null;\r\n        reward = reward * 10 ** 18;\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\r\n\r\n                if (Number(approval) >= Number(reward * correct_limit)) {\r\n                    hash = await this._create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\r\n                    if (hash) {\r\n                        res = await publicClient.waitForTransactionReceipt({ hash });\r\n                    }\r\n                } else {\r\n                    hash = await this.approve(account, reward * correct_limit);\r\n                    if (hash) {\r\n                        res = await publicClient.waitForTransactionReceipt({ hash });\r\n                        hash = await this._create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\r\n                        console.log(hash);\r\n                        if (hash) {\r\n                            res = await publicClient.waitForTransactionReceipt({ hash });\r\n                        }\r\n                    }\r\n                }\r\n                console.log(\"create_quiz_cont\");\r\n            } else {\r\n                setShow(false);\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            setShow(false);\r\n            console.log(err);\r\n        }\r\n        document.location.href = homeUrl + \"/answer_quiz/\" + res.logs[2].topics[2];\r\n    }\r\n\r\n    async _create_quiz(account, title, explanation, thumbnail_url, content, answer_type, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit) {\r\n        const dateStartObj = new Date(reply_startline);\r\n        const dateEndObj = new Date(reply_deadline);\r\n\r\n        // Date オブジェクトをエポック秒に変換する\r\n        const epochStartSeconds = Math.floor(dateStartObj.getTime() / 1000);\r\n        const epochEndSeconds = Math.floor(dateEndObj.getTime() / 1000);\r\n        try {\r\n            if (ethereum) {\r\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\r\n                console.log(answer_type);\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"create_quiz\",\r\n                        args: [title, explanation, thumbnail_url, content, answer_type, answer_data.toString(), correct, epochStartSeconds, epochEndSeconds, reward, correct_limit],\r\n                        //args: [\"a\", \"a\", \"a\", \"a\", 1, \"a\", \"a\", epochStartSeconds, epochEndSeconds, 2, 2],\r\n                    });\r\n\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async edit_quiz(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline, setShow) {\r\n        setShow(true);\r\n        //console.log([id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline]);\r\n        let res = null;\r\n        let hash = null;\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let approval = await token.read.allowance({ account, args: [account, quiz_address] });\r\n\r\n                hash = await this._edit_quiz(account, id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline);\r\n                console.log(hash);\r\n                if (hash) {\r\n                    res = await publicClient.waitForTransactionReceipt({ hash });\r\n                }\r\n                console.log(res);\r\n\r\n                console.log(\"create_quiz_cont\");\r\n            } else {\r\n                setShow(false);\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            setShow(false);\r\n            console.log(err);\r\n        }\r\n        document.location.href = homeUrl + \"/edit_list\";\r\n    }\r\n\r\n    async _edit_quiz(account, id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline) {\r\n        const dateStartObj = new Date(reply_startline);\r\n        const dateEndObj = new Date(reply_deadline);\r\n\r\n        // Date オブジェクトをエポック秒に変換する\r\n        const epochStartSeconds = Math.floor(dateStartObj.getTime() / 1000);\r\n        const epochEndSeconds = Math.floor(dateEndObj.getTime() / 1000);\r\n        try {\r\n            if (ethereum) {\r\n                //console.log(title, explanation, thumbnail_url, content, answer_type, answer_data, correct, epochStartSeconds, epochEndSeconds, reward, correct_limit);\r\n\r\n                try {\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"edit_quiz\",\r\n                        args: [id, owner, title, explanation, thumbnail_url, content, epochStartSeconds, epochEndSeconds],\r\n                        //args: [\"a\", \"a\", \"a\", \"a\", 1, \"a\", \"a\", epochStartSeconds, epochEndSeconds, 2, 2],\r\n                    });\r\n\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async create_answer(id, answer, setShow, setContent) {\r\n        console.log(id, answer);\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n\r\n                setShow(true);\r\n                setContent(\"書き込み中...\");\r\n                let hash = await this._save_answer(account, id, answer);\r\n\r\n                if (hash) {\r\n                    // const res1 = await quiz.read.post_answer_view({account,args:[id, answer.toString()]})\r\n                    // console.log(res1);\r\n                    // if (res1 == true) {\r\n                    //     setContent(\"正解です！待機すると、マイページに遷移します\");\r\n                    // }\r\n                    // else {\r\n                    //     setContent(\"不正解です。待機すると、マイページに遷移します\");\r\n                    // }\r\n                    let res = await publicClient.waitForTransactionReceipt({ hash });\r\n                    console.log(res);\r\n                    //document.location.href = \"/user_page/\" + account;\r\n                    document.location.href = homeUrl + \"/list_quiz\";\r\n                }\r\n                console.log(\"create_answer_cont\");\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setShow(false);\r\n    }\r\n\r\n    async _save_answer(account, id, answer) {\r\n        try {\r\n            const { request } = await publicClient.simulateContract({\r\n                account,\r\n                address: quiz_address,\r\n                abi: quiz_abi,\r\n                functionName: \"save_answer\",\r\n                args: [id, answer.toString()],\r\n            });\r\n            console.log(\"正常そう\");\r\n            return await walletClient.writeContract(request);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async _post_answer(account, id, answer) {\r\n        try {\r\n            const { request } = await publicClient.simulateContract({\r\n                account,\r\n                address: quiz_address,\r\n                abi: quiz_abi,\r\n                functionName: \"post_answer\",\r\n                args: [id, answer.toString()],\r\n            });\r\n            console.log(\"正常そう\");\r\n            return await walletClient.writeContract(request);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async get_quiz_all_data(id) {\r\n        return await quiz.read.get_quiz_all_data({ args: [id] });\r\n    }\r\n\r\n    async get_quiz(id) {\r\n        const answer_typr = await quiz.read.get_quiz_answer_type({ args: [id] });\r\n        const res = await quiz.read.get_quiz({ args: [id] });\r\n        const res2 = await this.get_confirm_answer(id);\r\n        return [...res, answer_typr, ...res2];\r\n    }\r\n\r\n    async get_quiz_simple(id) {\r\n        return await quiz.read.get_quiz_simple({ args: [id] });\r\n    }\r\n\r\n    async get_is_payment(id) {\r\n        return await quiz.read.get_is_payment({ args: [id] });\r\n    }\r\n\r\n    async get_confirm_answer(id) {\r\n        return await quiz.read.get_confirm_answer({ args: [id] });\r\n    }\r\n\r\n    async get_quiz_all_data_list(start, end) {\r\n        //取得したクイズを格納する配列\r\n        let res = [];\r\n        let account = await this.get_address();\r\n\r\n        console.log(start, end);\r\n        if (start <= end) {\r\n            for (let i = start; i < end; i++) {\r\n                console.log(i);\r\n                res.push(await quiz.read.get_quiz_all_data({ account, args: [i] }));\r\n                console.log(res);\r\n            }\r\n        } else {\r\n            for (let i = start - 1; i >= end; i--) {\r\n                console.log(i);\r\n                res.push(await quiz.read.get_quiz_all_data({ account, args: [i] }));\r\n                console.log(res);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    //startからendまでのクイズを取得\r\n\r\n    async get_quiz_list(start, end) {\r\n        //取得したクイズを格納する配列\r\n        let res = [];\r\n        let account = await this.get_address();\r\n\r\n        console.log(start, end);\r\n        if (start <= end) {\r\n            for (let i = start; i < end; i++) {\r\n                console.log(i);\r\n                res.push(await quiz.read.get_quiz_simple({ account, args: [i] }));\r\n                console.log(res);\r\n            }\r\n        } else {\r\n            for (let i = start - 1; i >= end; i--) {\r\n                console.log(i);\r\n                res.push(await quiz.read.get_quiz_simple({ account, args: [i] }));\r\n                console.log(res);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    async get_quiz_lenght() {\r\n        return await quiz.read.get_quiz_length();\r\n    }\r\n\r\n    async get_num_of_students() {\r\n        return Number(await quiz.read.get_num_of_students());\r\n    }\r\n\r\n    async add_student(address) {\r\n        console.log(address);\r\n        try {\r\n            if (ethereum) {\r\n                try {\r\n                    let account = await this.get_address();\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"add_student\",\r\n                        args: [address],\r\n                    });\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async add_teacher(address) {\r\n        try {\r\n            if (ethereum) {\r\n                try {\r\n                    let account = await this.get_address();\r\n                    const { request } = await publicClient.simulateContract({\r\n                        account,\r\n                        address: quiz_address,\r\n                        abi: quiz_abi,\r\n                        functionName: \"add_teacher\",\r\n                        args: [address],\r\n                    });\r\n                    return await walletClient.writeContract(request);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_teachers() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                return await quiz.read.get_teacher_all({ account, args: [] });\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_results() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_student_results({ account, args: [] });\r\n                console.log(res);\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async isTeacher() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                return await quiz.read._isTeacher({ account, args: [] });\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_only_student_results() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_only_student_results({ account, args: [] });\r\n                console.log(res);\r\n                for (let i = 0; i < res.length; i++) {\r\n                    res[i] = Number(res[i]);\r\n                }\r\n                await res.sort(function (a, b) {\r\n                    return b - a;\r\n                });\r\n                console.log(res);\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exist\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_rank(result) {\r\n        try {\r\n            if (ethereum) {\r\n                let results = await this.get_only_student_results();\r\n                for (let i = 0; i < results.length; i++) {\r\n                    if (result == results[i]) return i + 1;\r\n                }\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_respondentCount_and_respondentLimit(id) {\r\n        return await quiz.read.get_respondentCount_and_respondentLimit({ args: [id] });\r\n    }\r\n    //ここから変更\r\n    async get_student_answer_hash(student, id) {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_student_answer_hash({ account, args: [student, id] });\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    async get_student_list() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_student_all({ account, args: [] });\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async get_students_answer_hash_list(students, id) {\r\n        try {\r\n            if (ethereum) {\r\n                let res = {};\r\n                console.log(students[1]);\r\n                for (let i = 0; i < students.length; i++) {\r\n                    res[students[i]] = await this.get_student_answer_hash(students[i], id);\r\n                }\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    //ここまで変更\r\n\r\n    async get_data_for_survey_users() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_data_for_survey_users({ account, args: [] });\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    async get_data_for_survey_quizs() {\r\n        try {\r\n            if (ethereum) {\r\n                let account = await this.get_address();\r\n                let res = await quiz.read.get_data_for_survey_quizs({ account, args: [] });\r\n                return res;\r\n            } else {\r\n                console.log(\"Ethereum object does not exists\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Contracts_MetaMask };","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\list_quiz_top.jsx",["267","268","269","270","271","272","273","274","275","276","277","278"],[],"import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useParams } from \"react-router-dom\";\r\nimport Simple_quiz from \"./components/quiz_simple\";\r\nimport Quiz_list from \"./components/quiz_list\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction List_quiz_top(props) {\r\n    //クイズのコントラクト\r\n    let cont = new Contracts_MetaMask();\r\n\r\n    //現在表示している個数を保持するref\r\n    const now_numRef = useRef(0); //保存\r\n    //クイズの総数\r\n    const [quiz_sum, Set_quiz_sum] = useState(null); //保存\r\n\r\n    //表示するクイズのリスト\r\n    const [quiz_list, Set_quiz_list] = useState([]); //保存\r\n    //１回の更新で追加で表示する個数\r\n    const [add_num, Set_add_num] = useState(7);\r\n    // コンテナのrefを作成\r\n    const containerRef = useRef(null);\r\n\r\n    const callback = (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                // ターゲットの<div>が画面に表示された場合に実行される関数\r\n                console.log(\"Target div is visible on the screen!\");\r\n                // ここに実行したい関数を記述\r\n\r\n                // console.log(\"///////\",now_num);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        cont.get_quiz_lenght().then((data) => {\r\n            // Promise オブジェクトが解決された後の処理を記述\r\n            console.log(Number(data));\r\n            let now = parseInt(Number(data));\r\n            Set_quiz_sum(now);\r\n            now_numRef.current = now;\r\n        });\r\n    }, []);\r\n\r\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\r\n\r\n    if (quiz_sum != null) {\r\n        return (\r\n            <>\r\n                {/* スクロールを監視するコンポーネント */}\r\n                <Quiz_list cont={cont} add_num={add_num} Set_add_num={Set_add_num} quiz_sum={quiz_sum} Set_quiz_sum={Set_quiz_sum} quiz_list={quiz_list} Set_quiz_list={Set_quiz_list} targetRef={targetRef} now_numRef={now_numRef} />\r\n\r\n                {/* */}\r\n                {quiz_list.map((quiz, index) => {\r\n                    if (index !== quiz_list.length - add_num) {\r\n                        return <>{quiz_list[index]}</>;\r\n                    }\r\n                })}\r\n                <div ref={targetRef}>\r\n                    {/* ターゲット要素aの内容 */}\r\n                    now_loading\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\nexport default List_quiz_top;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\create_quiz.jsx",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],[],"import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport Answer_select from \"./components/answer_select\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Wait_Modal from \"../../contract/wait_Modal\";\r\n\r\nconst { ethereum } = window;\r\nconst mkdStr = \"\";\r\n\r\nfunction Create_quiz() {\r\n    const [useing_address, Set_useing_address] = useState(null);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [explanation, setExplanation] = useState(\"\");\r\n    const [thumbnail_url, setThumbnail_url] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [answer_type, setAnswer_type] = useState(0);\r\n    const [answer_data, setAnswer_data] = useState([]);\r\n    const [correct, setCorrect] = useState(\"\");\r\n    const [reply_startline, setReply_startline] = useState(\r\n        new Date()\r\n            .toLocaleString(\"ja-JP\", { timeZone: \"Asia/Tokyo\" })\r\n            .replace(/[/]/g, \"-\")\r\n            .replace(/\\s(\\d):/, \" 0$1:\"),\r\n    );\r\n    const [reply_deadline, setReply_deadline] = useState(getLocalizedDateTimeString(addDays(new Date(), 1)));\r\n    const [reward, setReward] = useState(0);\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n\r\n    const [correct_limit, setCorrect_limit] = useState(null);\r\n    const [state, setState] = useState(\"Null\");\r\n    const [now, setnow] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const convertFullWidthNumbersToHalf = (() => {\r\n        // 全角数字と半角数字の差分を計算\r\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\r\n\r\n        // 置換関数を返す\r\n        return text => text.replace(\r\n            /[０-９]/g\r\n            , m => String.fromCharCode(m.charCodeAt(0) - diff)\r\n        );\r\n    })();\r\n\r\n    const create_quiz = async () => {\r\n        //console.log(title, explanation, thumbnail_url, content, answer_data, correct, reply_startline, reply_deadline, reward, correct_limit);\r\n\r\n        if (correct !== \"\") {\r\n            console.log(new Date(reply_startline).getTime(), new Date(reply_deadline).getTime());\r\n            Contract.create_quiz(title, explanation, thumbnail_url, content, answer_type, answer_data, convertFullWidthNumbersToHalf(correct), reply_startline, reply_deadline, reward, correct_limit, setShow);\r\n        } else {\r\n            alert(\"正解を入力してください\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n    function getLocalizedDateTimeString(now = new Date()) {\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n        const day = String(now.getDate()).padStart(2, \"0\");\r\n        const hours = String(now.getHours()).padStart(2, \"0\");\r\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n\r\n        const formatter = new Intl.DateTimeFormat(\"ja-JP\", {\r\n            timeZone: \"Asia/Tokyo\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n        });\r\n\r\n        const localizedDateTimeString = formatter\r\n            .format(now)\r\n            .replace(/\\u200E|\\u200F/g, \"\")\r\n            .replace(/\\//g, \"-\")\r\n            .replace(/ /, \"T\");\r\n\r\n        return localizedDateTimeString;\r\n    }\r\n    function addDays(date, days) {\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        // let now = new Date();\r\n        // const diff_time = new Date(now + 100);\r\n        // setReply_deadline(addDays(now, 5));\r\n        async function get_contract() {\r\n            setCorrect_limit((await Contract.get_num_of_students()) + 30);\r\n        }\r\n        get_contract();\r\n        setnow(getLocalizedDateTimeString());\r\n        // console.log(now);\r\n        // console.log(new Date().toISOString().slice(0, 16));\r\n    }, []);\r\n    console.log(reply_deadline);\r\n    console.log(reply_startline);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-2\" />\r\n                <div className=\"col-8\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>タイトル</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" value={title} onChange={(event) => setTitle(event.target.value)} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>説明</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={explanation.split(\"\\n\").length + 3} value={explanation} onChange={(event) => setExplanation(event.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>サムネイル</Form.Label>\r\n                        <Form.Control type=\"url\" value={thumbnail_url} onChange={(event) => setThumbnail_url(event.target.value)} />\r\n                    </Form.Group>\r\n                    <img src={thumbnail_url} width=\"200\" />\r\n                    <br />\r\n\r\n                    <Form.Group className=\"mb-3\" data-color-mode=\"light\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>内容</Form.Label>\r\n                        <MDEditor height={500} value={content} onChange={setContent} />\r\n                    </Form.Group>\r\n\r\n                    {/*<Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>選択肢(正解の回答にチェックを入れてください)</Form.Label><br />\r\n                        <Answer_area1 name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/>\r\n                    </Form.Group> */}\r\n                    <Answer_select name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect} setAnswer_type={setAnswer_type} answer_type={answer_type} />\r\n\r\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>回答開始日時</Form.Label>\r\n                        <Form.Control\r\n                            type=\"datetime-local\"\r\n                            defaultValue={now}\r\n                            //value={reply_deadline}\r\n                            min={now}\r\n                            onChange={(event) => setReply_startline(new Date(event.target.value))}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                        <Form.Label>回答締切日時</Form.Label>\r\n                        <Form.Control\r\n                            type=\"datetime-local\"\r\n                            defaultValue={reply_deadline}\r\n                            //value={reply_deadline}\r\n                            min={now}\r\n                            onChange={(event) => setReply_deadline(new Date(event.target.value))}\r\n                        />\r\n                    </Form.Group>\r\n                    {/*\r\n                    <div className=\"row\">\r\n\r\n                        <Form.Group className=\"mb-3 col-4\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>報酬</Form.Label>\r\n                            <Form.Control type=\"number\" min={1} step={1} value={reward} onChange={(event) => setReward(parseInt(event.target.value))} />\r\n                        </Form.Group>\r\n                        <div className=\"col-1\" />\r\n\r\n                        <Form.Group className=\"mb-3 col-4\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>正解の上限</Form.Label>\r\n                            <Form.Control type=\"number\" min={1} step={1} value={correct_limit} onChange={(event) => setCorrect_limit(parseInt(event.target.value))} />\r\n                        </Form.Group>\r\n                    </div>\r\n                    */}\r\n\r\n                    <div style={{ textAlign: \"right\" }}>\r\n                        <Button variant=\"primary\" onClick={() => create_quiz()} style={{ marginTop: \"20px\" }}>\r\n                            クイズを作成\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-2\" />\r\n            </div>\r\n\r\n            <Wait_Modal showFlag={show} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create_quiz;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\user_page.jsx",["295","296","297","298","299"],[],"import {Contracts_MetaMask} from \"../../contract/contracts\";\r\nimport {useState, useEffect, useRef} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Login from \"../../contract/login\";\r\n//cssをimport\r\nimport \"./user_page.css\";\r\nimport History_list from \"./component/history_list\";\r\nimport User_card from \"./component/user_card\";\r\nimport {icons} from \"react-icons/lib\";\r\n\r\nfunction User_page() {\r\n    const {address} = useParams();\r\n\r\n    //User_cardへの表示用\r\n    const [icons, SetIcons] = useState(null);\r\n    const [user_name, Setuser_name] = useState(null);\r\n\r\n    const [result, SetResult] = useState(null);\r\n    const [token, Set_token] = useState(null);\r\n    const [state, Set_state] = useState(null);\r\n    const [rank, setRank] = useState(null);\r\n    const [num_of_student, setNum_of_student] = useState(null); \r\n    //クイズの総数\r\n    const [history_sum, Set_history_sum] = useState(null);\r\n    //現在表示している個数を保持するref\r\n    const now_numRef = useRef(0);\r\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\r\n\r\n    let cont = new Contracts_MetaMask();\r\n    const [history_list, Set_history_list] = useState([]);\r\n\r\n    const get_variable = async () => {\r\n        Set_token(await cont.get_token_balance(address));\r\n        let [user_name, image, result, state] = await cont.get_user_data(address);\r\n        console.log(user_name, image, state);\r\n        Setuser_name(user_name);\r\n        SetIcons(image);\r\n        SetResult(result / 10 ** 18);\r\n        setRank(await cont.get_rank(result));\r\n        setNum_of_student(await cont.get_num_of_students());\r\n        Set_state(state);\r\n\r\n        cont.get_user_history_len(address).then((data) => {\r\n            // Promise オブジェクトが解決された後の処理を記述\r\n            console.log(Number(data));\r\n            Set_history_sum(Number(data));\r\n            now_numRef.current = Number(data);\r\n        });\r\n    };\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        get_variable();\r\n    }, []);\r\n\r\n    if (history_sum != null) {\r\n        return (\r\n            <div className=\"mypage\">\r\n                <User_card address={address} icons={icons} user_name={user_name} token={token} result={result} state={state} rank={rank} num_of_student={num_of_student} cont={cont} />\r\n                <History_list cont={cont} history_sum={history_sum} Set_history_sum={Set_history_sum} history_list={history_list} Set_history_list={Set_history_list} targetRef={targetRef} now_numRef={now_numRef} address={address} />\r\n\r\n                <div className=\"token-history\">\r\n                    <div className=\"title\">Token History</div>\r\n                    <div className=\"timeline\">\r\n                        {history_list.map((history, index) => {\r\n                            // console.log(quiz);\r\n                            return <>{history}</>;\r\n                        })}\r\n                    </div>\r\n                    <div ref={targetRef}>\r\n                        {/* ターゲット要素aの内容 */}\r\n                        now_loading\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n\r\nexport default User_page;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\admin.jsx",["300","301","302","303","304","305","306"],[],"import { id } from \"ethers/lib/utils\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Add_students from \"./components/add_student\";\r\nimport Add_teacher from \"./components/add_teacher\";\r\nimport View_result from \"./components/view_results\";\r\n//import { CSVLink, CSVDownload } from \"react-csv\";\r\nfunction Admin_page(props) {\r\n    const [component, setComponent] = useState(\"Add_students\");\r\n    const [isteacher, setisteacher] = useState(null);\r\n    /*\r\n    const [students, setStudents] = useState(null);\r\n    const [answer_hashs, setAnswer_hashs] = useState(null);\r\n    const [quiz_data, setQuiz_data] = useState(null);\r\n    const [csvdownloader, setCsvdownloader] = useState(false);\r\n    const quiz_id = 10;\r\n    \r\n\r\n    const handle_export_csv = () => {\r\n        let quiz_data = []\r\n        for (let i = 0; i < students.length; i++) {\r\n            quiz_data.push([students[i].toString(), (answer_hashs[students[i]]).toString()]);\r\n        }\r\n        setQuiz_data(quiz_data);\r\n        setCsvdownloader(true);\r\n    }\r\n\r\n    function Create_csvlink(props) {\r\n        return (\r\n            <div>\r\n                <div><CSVLink filename={`quiz_answers${props.cont[1]}.csv`} variant=\"primary\" data={props.cont[0]}>こちらから学生の成績データをダウンロード</CSVLink></div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    */\r\n\r\n    const handleClick = (event) => {\r\n        const { name } = event.target;\r\n        console.log(name);\r\n        setComponent(name);\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function is_teacher() {\r\n            setisteacher(await props.cont.isTeacher());\r\n        }\r\n        /*\r\n        async function get_student_list() {\r\n            setStudents(await props.cont.get_student_list());\r\n        }\r\n        */\r\n\r\n        is_teacher();\r\n        //get_student_list();\r\n    }, []);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        async function answer_hashs() {\r\n            setAnswer_hashs(await props.cont.get_students_answer_hash_list(students, quiz_id));\r\n        }\r\n        answer_hashs();\r\n    }, [students]);\r\n    */\r\n\r\n    //console.log(students);\r\n    //console.log(answer_hashs);\r\n    if (isteacher) {\r\n        return (\r\n            <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\r\n                    <button type=\"button\" name=\"Add_students\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        生徒を追加\r\n                    </button>\r\n                </div>\r\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\r\n                    <button type=\"button\" name=\"Add_teacher\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        教員orTAを追加\r\n                    </button>\r\n                </div>\r\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\r\n                    <button type=\"button\" name=\"View_result\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        生徒の成績を閲覧\r\n                    </button>\r\n                </div>\r\n\r\n                {/* name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/ */}\r\n                {component === \"Add_students\" && <Add_students cont={props.cont} />}\r\n                {component === \"Add_teacher\" && <Add_teacher cont={props.cont} />}\r\n                {component === \"View_result\" && <View_result cont={props.cont} />}\r\n                {/*\r\n                {answer_hashs ? <Button variant=\"primary\" onClick={() => handle_export_csv()}>quiz_id[{quiz_id}]のCSVファイルの出力</Button> : \"\"}\r\n                {csvdownloader === true && <Create_csvlink cont={[quiz_data, quiz_id]} />}\r\n                */}\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default Admin_page;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\navbar\\navbar.jsx",["307","308","309","310","311","312","313","314","315","316","317","318","319","320"],[],"import { useEffect, useState } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport \"./navbar.css\";\r\nimport { AiFillPropertySafety, AiOutlineUser } from \"react-icons/ai\";\r\nimport { MdOutlineQuiz } from \"react-icons/md\";\r\nimport { RiFileSettingsLine } from \"react-icons/ri\";\r\nimport { AiOutlineUnorderedList } from \"react-icons/ai\";\r\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\r\nimport { AiFillHome, AiFillSetting, AiFillStar } from \"react-icons/ai\";\r\nimport { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Modal_change_network from \"./Modal_change_network\";\r\n\r\nfunction create_col1() {\r\n    return (\r\n        <div className=\"col-1\"></div>\r\n    );\r\n}\r\n\r\n// 出題ボタンの定義\r\nfunction create_quiz_button(prop) {\r\n    return (\r\n        <div className=\"col-3\">\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"create_quiz\" href={prop + \"/create_quiz\"}>\r\n                    <div className=\"col-12\">\r\n                        <MdOutlineQuiz size={30} />\r\n                    </div>\r\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                        <font size=\"2\">出題</font>\r\n                    </div>\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction create_edit_button(prop) {\r\n    return (\r\n        <div className=\"col-3\">\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"edit\" href={prop + \"/edit_list\"}>\r\n                    <div className=\"col-12\">\r\n                        <RiFileSettingsLine size={30} />\r\n                    </div>\r\n                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                        <font size=\"2\">テストの編集</font>\r\n                    </div>\r\n                </Nav.Link>\r\n            </Nav.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Nav_menu(props) {\r\n    const [useing_address, Set_useing_address] = useState(null);\r\n    const [chain_id, setChain_id] = useState(null);\r\n    const [isTeacher, setIsTeacher] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //非同期処理をUseEffect内で行う場合は、async/awaitを使用する\r\n        const get_variable = async () => {\r\n            setChain_id(await props.cont.get_chain_id());\r\n            Set_useing_address(await props.cont.get_address());\r\n            setIsTeacher(await props.cont.isTeacher());\r\n        };\r\n\r\n        get_variable();\r\n    }, []);\r\n    console.log(isTeacher);\r\n    return (\r\n        <>\r\n            <Modal_change_network chain_id={chain_id} cont={props.cont} />\r\n            <div className=\"row\" style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\r\n                <Navbar\r\n                    fixed=\"bottom\"\r\n                    bg=\"light\"\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <div className=\"row justify-content-bitween\">\r\n                        <div className=\"col-3\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"list_quiz\" href={props.home + \"/list_quiz\"}>\r\n                                    <div className=\"col-12 \">\r\n                                        <AiOutlineUnorderedList size={30} />\r\n                                    </div>\r\n                                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                                        <font size=\"2\">一覧</font>\r\n                                    </div>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </div>\r\n                        {!isTeacher ? create_col1() : \"\"}\r\n                        {/* 先生のみ出題ボタンを表示 */}\r\n                        {isTeacher ? create_quiz_button(props.home) : \"\"}\r\n                        {!isTeacher ? create_col1() : \"\"}\r\n                        <div className=\"col-3\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"user_page\" href={props.home + \"/user_page/\" + useing_address}>\r\n                                    <div className=\"col-12\">\r\n                                        <AiOutlineUser size={30} />\r\n                                    </div>\r\n                                    <div className=\"col-12 d-flex justify-content-center align-items-center\">\r\n                                        <font size=\"2\">myPage</font>\r\n                                    </div>\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        </div>\r\n                        {isTeacher ? create_edit_button(props.home) : \"\"}\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Nav_menu;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\edit_list_top.jsx",["321","322","323","324","325","326","327","328","329","330","331","332"],[],"import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useParams } from \"react-router-dom\";\r\nimport Simple_quiz from \"./components/quiz_simple\";\r\nimport Quiz_list from \"./components/quiz_list\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Edit_list_top(props) {\r\n    //クイズのコントラクト\r\n    let cont = new Contracts_MetaMask();\r\n\r\n    //現在表示している個数を保持するref\r\n    const now_numRef = useRef(0); //保存\r\n    const [isTeacher, setIsTeacher] = useState(false);\r\n    //クイズの総数\r\n    const [quiz_sum, Set_quiz_sum] = useState(null); //保存\r\n\r\n    //表示するクイズのリスト\r\n    const [quiz_list, Set_quiz_list] = useState([]); //保存\r\n    //１回の更新で追加で表示する個数\r\n    const [add_num, Set_add_num] = useState(7);\r\n    // コンテナのrefを作成\r\n    const containerRef = useRef(null);\r\n\r\n    const callback = (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                // ターゲットの<div>が画面に表示された場合に実行される関数\r\n                console.log(\"Target div is visible on the screen!\");\r\n                // ここに実行したい関数を記述\r\n\r\n                // console.log(\"///////\",now_num);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        cont.get_quiz_lenght().then((data) => {\r\n            // Promise オブジェクトが解決された後の処理を記述\r\n            console.log(Number(data));\r\n            let now = parseInt(Number(data));\r\n            Set_quiz_sum(now);\r\n            now_numRef.current = now;\r\n        });\r\n        const set_is_teacher = async () => {\r\n            setIsTeacher(await cont.isTeacher());\r\n        };\r\n        set_is_teacher();\r\n    }, []);\r\n\r\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\r\n    console.log(\"ユーザーのisTeacherステータス\");\r\n    console.log(isTeacher);\r\n    if (isTeacher) {\r\n        if (quiz_sum != null) {\r\n            return (\r\n                <>\r\n                    {/* スクロールを監視するコンポーネント */}\r\n                    <Quiz_list cont={cont} add_num={add_num} Set_add_num={Set_add_num} quiz_sum={quiz_sum} Set_quiz_sum={Set_quiz_sum} quiz_list={quiz_list} Set_quiz_list={Set_quiz_list} targetRef={targetRef} now_numRef={now_numRef} />\r\n\r\n                    {/* */}\r\n                    {quiz_list.map((quiz, index) => {\r\n                        if (index !== quiz_list.length - add_num) {\r\n                            return <>{quiz_list[index]}</>;\r\n                        }\r\n                    })}\r\n                    <div ref={targetRef}>\r\n                        {/* ターゲット要素aの内容 */}\r\n                        now_loading\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            return <></>;\r\n        }\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\nexport default Edit_list_top;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\answer_quiz\\answer_quiz.jsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],[],"import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Wait_Modal from \"../../contract/wait_Modal\";\r\nimport { ConstructorFragment } from \"ethers/lib/utils\";\r\nfunction Show_correct(props){\r\n    if(props.cont == true){\r\n        return (\r\n            <a>答えは{props.answer}</a>\r\n        );\r\n    }else{\r\n        return <></>;\r\n    }\r\n}\r\nfunction Answer_type1(props) {\r\n    return (\r\n        <>\r\n            <a>\r\n                <br />\r\n                選択式\r\n            </a>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {props.quiz[6].split(\",\").map((cont) => {\r\n                        let check_box;\r\n                        if (props.answer == cont) {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                    checked\r\n                                />\r\n                            );\r\n                        } else {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        }\r\n                        return (\r\n                            <tr key={cont}>\r\n                                <th scope=\"col\">{check_box}</th>\r\n\r\n                                <th scope=\"col\" className=\"left\">\r\n                                    {cont}\r\n                                </th>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer_type2(props) {\r\n    const answer_data = props.quiz[6].split(\",\");\r\n    const pattern = answer_data[0];\r\n    const example = answer_data[1];\r\n    const [error_collect, SetError_Collect] = useState(true);\r\n    useEffect(() => {\r\n        console.log(props.quiz);\r\n        console.log(pattern);\r\n        console.log(example);\r\n    }, []);\r\n\r\n    //正規表現のエラー表示\r\n    const handle_Test_pattern = (event, target_set) => {\r\n        const value = event.target.value;\r\n\r\n        console.log(pattern);\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!new RegExp(pattern).test(value)) {\r\n            target_set(true);\r\n            console.log(\"errr\");\r\n        } else {\r\n            target_set(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <a>入力形式</a>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正解を入力\r\n                    <br />\r\n                    <p>例:{example}</p>\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={props.answer}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Collect);\r\n                            props.setAnswer(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_collect ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer_quiz(props) {\r\n    const [answer, setAnswer] = useState();\r\n    const [now, setnow] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [content, setContent] = useState(\"\");\r\n    const [is_correct_show, setIs_correct_show] = useState(false);\r\n    let clean_up;\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n    const id = useParams()[\"id\"];\r\n    console.log(id);\r\n    console.log(\"解答の最大数とこれまでに回答した人数\");\r\n    async function getCorrectLimitAndCorrectCount(id) {\r\n        return (await Contract.get_respondentCount_and_respondentLimit(id));\r\n    }\r\n\r\n    console.log(getCorrectLimitAndCorrectCount(id));\r\n\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [simple_quiz, setSimple_quiz] = useState(null);\r\n\r\n    const get_quiz = async () => {\r\n        setQuiz(await Contract.get_quiz(id));\r\n        setSimple_quiz(await Contract.get_quiz_simple(id));\r\n    };\r\n\r\n    const convertFullWidthNumbersToHalf = (()=>{\r\n        // 全角数字と半角数字の差分を計算\r\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\r\n\r\n            // 置換関数を返す\r\n        return text => text.replace(\r\n                    /[０-９]/g\r\n                    ,m=>String.fromCharCode( m.charCodeAt(0) - diff )\r\n        ); \r\n    })();\r\n\r\n    const create_answer = async () => {\r\n        if (quiz[15] == true){\r\n            setIs_correct_show(true);\r\n            return;\r\n        }\r\n        if (parseInt(quiz[8]).toString() <= now) {\r\n            const res = Contract.create_answer(id, convertFullWidthNumbersToHalf(answer), setShow, setContent);\r\n        } else {\r\n            alert(\"まだ回答開始時間になっていません\");\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        get_quiz();\r\n        setnow(Math.floor(new Date().getTime() / 1000));\r\n    }, []);\r\n\r\n    if (quiz && simple_quiz) {\r\n        // console.log(quiz)\r\n        // console.log(simple_quiz)\r\n        return (\r\n            <>\r\n                <h3 style={{ margin: \"50px\" }}>{Number(simple_quiz[\"state\"]) == 0 ? \"初回の回答です。正解するとトークンがもらえます\" : Number(simple_quiz[\"state\"]) == 1 ? \"初回の回答で間違えています。正解してもトークンはもらえません\" : Number(simple_quiz[\"state\"]) == 2 ? \"正解しています\" : \"\"}</h3>\r\n                <div className=\"container\" style={{ \"text-align\": \"left\", \"margin-bottom\": \"50px\" }}>\r\n                    <h2>{quiz[2]}</h2>\r\n                    <br />\r\n                    <a style={{ \"white-space\": \"pre-wrap\", \"font-size\": \"14px\", \"line-height\": \"1\" }}>\r\n                        <br />\r\n                        {quiz[3]}\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    <a>出題者:{quiz[1]}</a>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div data-color-mode=\"light\" className=\"left\" style={{ \"text-align\": \"left\" }}>\r\n                        <MDEditor.Markdown source={quiz[5]} />\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (Number(quiz[13]) == 0) {\r\n                            return <Answer_type1 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n                    {(() => {\r\n                        if (Number(quiz[13]) == 1) {\r\n                            return <Answer_type2 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n\r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <Button variant=\"primary\" onClick={create_answer}>\r\n                            回答\r\n                        </Button>\r\n                    </div>\r\n                    {Number(quiz[13])}<br />\r\n                    <Show_correct cont={is_correct_show} answer={quiz[14]}/>\r\n                </div>\r\n                <Wait_Modal showFlag={show} content={content} />\r\n            </>\r\n        );\r\n    } else {\r\n        <></>;\r\n    }\r\n}\r\nexport default Answer_quiz;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\edit_quiz.jsx",["357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],[],"import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport Answer_select from \"./components/answer_select\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Wait_Modal from \"../../contract/wait_Modal\";\r\n\r\nconst { ethereum } = window;\r\nconst mkdStr = \"\";\r\n\r\nfunction Edit_quiz() {\r\n    const [id, setId] = useState(useParams()[\"id\"]);\r\n    const [owner, setOwner] = useState(null);\r\n\r\n    const [useing_address, Set_useing_address] = useState(null);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [explanation, setExplanation] = useState(\"\");\r\n    const [thumbnail_url, setThumbnail_url] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [reply_startline, setReply_startline] = useState(\r\n        new Date()\r\n            .toLocaleString(\"ja-JP\", { timeZone: \"Asia/Tokyo\" })\r\n            .replace(/[/]/g, \"-\")\r\n            .replace(/\\s(\\d):/, \" 0$1:\"),\r\n    );\r\n    const [reply_deadline, setReply_deadline] = useState(getLocalizedDateTimeString(addDays(new Date(), 0)));\r\n    let Contract = new Contracts_MetaMask();\r\n\r\n    const [now, setnow] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [isteacher, setisteacher] = useState(null);\r\n\r\n    const location = useLocation();\r\n    const quiz = location.state.args;\r\n\r\n    const edit_quiz = async () => {\r\n        console.log(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline);\r\n\r\n        console.log(new Date(reply_startline).getTime(), new Date(reply_deadline).getTime());\r\n        if (new Date(reply_startline).getTime() < new Date(reply_deadline).getTime()) {\r\n            Contract.edit_quiz(id, owner, title, explanation, thumbnail_url, content, reply_startline, reply_deadline, setShow);\r\n        } else {\r\n            alert(\"回答開始日時を回答締切日時より前に設定してください\");\r\n        }\r\n    };\r\n    function getLocalizedDateTimeString(now = new Date()) {\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n        const day = String(now.getDate()).padStart(2, \"0\");\r\n        const hours = String(now.getHours()).padStart(2, \"0\");\r\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n\r\n        const formatter = new Intl.DateTimeFormat(\"ja-JP\", {\r\n            timeZone: \"Asia/Tokyo\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            hour12: false,\r\n        });\r\n\r\n        const localizedDateTimeString = formatter\r\n            .format(now)\r\n            .replace(/\\u200E|\\u200F/g, \"\")\r\n            .replace(/\\//g, \"-\")\r\n            .replace(/ /, \"T\");\r\n\r\n        return localizedDateTimeString;\r\n    }\r\n    function addDays(date, days) {\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n    function date_format(date) {\r\n        return date.split(\" \").join(\"T\").slice(0, date.length - 3);\r\n    }\r\n\r\n    async function is_teacher() {\r\n        setisteacher(await Contract.isTeacher());\r\n    }\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        // let now = new Date();\r\n        // const diff_time = new Date(now + 100);\r\n        // setReply_deadline(addDays(now, 5));\r\n        console.log(id);\r\n        setOwner(quiz[1]);\r\n        setTitle(quiz[2]);\r\n        setExplanation(quiz[3]);\r\n        setThumbnail_url(quiz[4]);\r\n        setContent(quiz[5]);\r\n        setReply_startline(getLocalizedDateTimeString(new Date(quiz[8] * 1000)));\r\n        setReply_deadline(getLocalizedDateTimeString(new Date(quiz[9] * 1000)));\r\n        setnow(getLocalizedDateTimeString());\r\n        is_teacher();\r\n        console.log(quiz)\r\n        // console.log(now);\r\n        // console.log(new Date().toISOString().slice(0, 16));\r\n    }, []);\r\n    console.log(now);\r\n    console.log(reply_deadline);\r\n    console.log(reply_startline);\r\n\r\n    if (isteacher) {\r\n        return (\r\n            <div>\r\n                <div className=\"row mb-5\">\r\n                    <div className=\"col-2\" />\r\n                    <div className=\"col-8\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{ textAlign: \"left\" }}>\r\n                                <Form.Label>タイトル</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Title\" value={title} onChange={(event) => setTitle(event.target.value)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>説明</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={explanation.split(\"\\n\").length + 3} value={explanation} onChange={(event) => setExplanation(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>サムネイル</Form.Label>\r\n                            <Form.Control type=\"url\" value={thumbnail_url} onChange={(event) => setThumbnail_url(event.target.value)} />\r\n                        </Form.Group>\r\n                        <img src={thumbnail_url} width=\"200\" />\r\n                        <br />\r\n\r\n                        <Form.Group className=\"mb-3\" data-color-mode=\"light\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>内容</Form.Label>\r\n                            <MDEditor height={500} value={content} onChange={setContent} />\r\n                        </Form.Group>\r\n\r\n                        {/*\r\n                        <Answer_select name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect} setAnswer_type={setAnswer_type} answer_type={answer_type} />\r\n                        */}\r\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>回答開始日時</Form.Label>\r\n                            <Form.Control\r\n                                type=\"datetime-local\"\r\n                                defaultValue={reply_startline}\r\n                                //value={reply_startline}\r\n                                //min={reply_startline}\r\n                                onChange={(event) => setReply_startline(new Date(event.target.value))}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" style={{ textAlign: \"left\" }}>\r\n                            <Form.Label>回答締切日時</Form.Label>\r\n                            <Form.Control\r\n                                type=\"datetime-local\"\r\n                                defaultValue={reply_deadline}\r\n                                //value={reply_deadline}\r\n                                //min={reply_deadline}\r\n                                onChange={(event) => setReply_deadline(new Date(event.target.value))}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                        <div style={{ textAlign: \"right\" }}>\r\n                            <Button variant=\"primary\" onClick={() => edit_quiz()} style={{ marginTop: \"20px\" }}>\r\n                                クイズをの編集を実行\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2\" />\r\n                </div>\r\n\r\n                <Wait_Modal showFlag={show} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n{/*\r\nconst { ethereum } = window;\r\nconst mkdStr = \"\";\r\n\r\nfunction Create_quiz() {\r\n    let Contract = new Contracts_MetaMask();\r\n    const [id, setId] = useState(useParams()[\"id\"]);\r\n    const [quiz, setQuiz] = useState(null);\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        // let now = new Date();\r\n        // const diff_time = new Date(now + 100);\r\n        // setReply_deadline(addDays(now, 5));\r\n        const get_contract = async () => {\r\n            setQuiz(await Contract.get_quiz_all_data(id));\r\n        };\r\n        get_contract(id);\r\n        console.log(quiz);\r\n        // console.log(now);\r\n        // console.log(new Date().toISOString().slice(0, 16));\r\n    }, []);\r\n}\r\n*/}\r\n\r\nexport default Edit_quiz;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\investment_page\\investment_page.jsx",["373","374","375","376","377"],[],"import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Contracts_MetaMask } from \"../../contract/contracts\";\r\n\r\nfunction Investment_to_quiz() {\r\n    const location = useLocation();\r\n\r\n    const [id, setId] = useState(location.state.args[0]);\r\n    const [amount, setAmount] = useState(0);\r\n    const [isNotPayingOut, setIsNotPayingOut] = useState(\"true\");\r\n    const [numOfStudent, setNumOfStudent] = useState(0);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [isteacher, setisteacher] = useState(null);\r\n    const [isNotAddingReward, setIsNotAddingReward] = useState(\"true\");\r\n    const [students, setStudents] = useState(null);\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n\r\n    const handleOptionChange = (event) => {\r\n        setIsNotPayingOut(event.target.value);\r\n        console.log(isNotPayingOut);\r\n\r\n    };\r\n\r\n    const adding_reward = (event) => {\r\n        setIsNotAddingReward(event.target.value);\r\n        console.log(isNotAddingReward);\r\n\r\n    };\r\n\r\n    async function get_contract() {\r\n        setNumOfStudent((await Contract.get_num_of_students()) + 30);\r\n    }\r\n\r\n    async function is_teacher() {\r\n        setisteacher(await Contract.isTeacher());\r\n    }\r\n    async function get_students() {\r\n        setStudents(await Contract.get_student_list());\r\n    }\r\n\r\n    get_contract();\r\n    is_teacher();\r\n\r\n    const convertFullWidthNumbersToHalf = (() => {\r\n        // 全角数字と半角数字の差分を計算\r\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\r\n\r\n        // 置換関数を返す\r\n        return text => text.replace(\r\n            /[０-９]/g\r\n            , m => String.fromCharCode(m.charCodeAt(0) - diff)\r\n        );\r\n    })();\r\n\r\n    const investment_to_quiz = async () => {\r\n        if ((answer == \"\" && isNotPayingOut == \"false\") == false) {\r\n            Contract.investment_to_quiz(id, amount, convertFullWidthNumbersToHalf(answer), isNotPayingOut, numOfStudent, isNotAddingReward, students);\r\n        } else {\r\n            alert(\"答えを入力してください\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        get_students();\r\n    }, []);\r\n\r\n    console.log(isNotPayingOut);\r\n    console.log(students);\r\n\r\n\r\n\r\n    if (isteacher) {\r\n        return (\r\n            <div className=\"col mb-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-10\">\r\n                        このテストのIDは{id}です\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        以下に追加する報酬(TFT)の量を指定してください<br />\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={amount}\r\n                            onChange={(event) => {\r\n                                setAmount(event.target.value);\r\n                            }}\r\n                        />\r\n                        正答した生徒一人ひとりに与えられるTFTトークン量： {amount}TFT\r\n                        <br />\r\n                        あなたから払いだされるTFTトークン量： {amount * numOfStudent}TFT\r\n\r\n                    </div>\r\n                    <div className=\"col-10\" style={{ marginTop: \"20px\" }}>\r\n                        以下に確定した答えを入力してください\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={answer}\r\n                            onChange={(event) => {\r\n                                setAnswer(event.target.value);\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n                    <br />\r\n                    以下は、解答を確定して報酬の払い出しを行うか行わないかの選択です。\r\n                    <div className=\"col-10\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"true\"\r\n                                onChange={handleOptionChange}\r\n                                checked={isNotPayingOut === \"true\"}\r\n                            />\r\n                            まだ報酬の払い出しを行わない\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"false\"\r\n                                onChange={handleOptionChange}\r\n                                checked={isNotPayingOut === \"false\"}\r\n                            />\r\n                            解答を確定して報酬を払い出す\r\n                        </label>\r\n                    </div>\r\n                    <br />\r\n                    この問題は発表されましたか？発表されていれば発表者に二倍のトークンを支払います\r\n                    <div className=\"col-10\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"true\"\r\n                                onChange={adding_reward}\r\n                                checked={isNotAddingReward === \"true\"}\r\n                            />\r\n                            発表されていない\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"false\"\r\n                                onChange={adding_reward}\r\n                                checked={isNotAddingReward === \"false\"}\r\n                            />発表されている\r\n                        </label>\r\n                    </div>\r\n\r\n                    <Button className=\"col-10\" variant=\"primary\" onClick={() => investment_to_quiz()} style={{ marginTop: \"20px\" }}>\r\n                        報酬の追加、報酬の払い出しを実行\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default Investment_to_quiz;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\network.js",[],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\config.jsx",[],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\quiz_list.jsx",["378","379","380","381","382","383","384","385","386","387","388"],[],"import Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useLocation } from \"react-router-dom\";\r\nimport Simple_quiz from \"./quiz_simple\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nfunction Quiz_list(props) {\r\n    const location = useLocation();\r\n    //画面を満たす個数を計算して、add_numに代入\r\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\r\n\r\n    //表示するクイズのリスト\r\n    // const [quiz_list,Set_quiz_list] =useState([]);\r\n\r\n    const quiz_list = props.quiz_list;\r\n    const Set_quiz_list = props.Set_quiz_list;\r\n\r\n    //クイズのリストを取得\r\n    const get_quiz_list = async (now) => {\r\n        //追加分のクイズ用のリスト\r\n        let add_quiz_list = [];\r\n\r\n        //クイズの総数を超えていたら\r\n        if (now - add_num.current < 0) {\r\n            //now_numからquiz_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_list(now, 0);\r\n            //now_numを0にする\r\n            props.now_numRef.current = 0;\r\n        } else {\r\n            //クイズの総数を超えていなかったら\r\n            //now_numからnow_num+add_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_list(now, now - add_num.current);\r\n            //now_numをnow_num+add_numにする\r\n            props.now_numRef.current = now - add_num.current;\r\n        }\r\n        //new_quiz_listをmapで展開して、quiz_listに追加\r\n        let now_quiz_list = [];\r\n\r\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\r\n        add_quiz_list.map((quiz) => {\r\n            now_quiz_list.push(<Simple_quiz quiz={quiz} />); //DOMとして追加\r\n        });\r\n\r\n        //quiz_listにnow_quiz_listを追加\r\n        //console.log([...quiz_list, ...now_quiz_list]);\r\n        Set_quiz_list((quiz_list) => [...quiz_list, ...now_quiz_list]);\r\n    };\r\n\r\n    const options = {\r\n        root: null, // ビューポートをルートとする\r\n        rootMargin: \"-10px\", // ビューポートに対するマージン\r\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        for (const entry of entries) {\r\n            if (entry.isIntersecting) {\r\n                // ターゲット要素がビューポートに入った時の処理\r\n                console.log(\"ターゲット要素がビューポートに入りました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            } else {\r\n                // ターゲット要素がビューポートから出た時の処理\r\n                console.log(\"ターゲット要素がビューポートから出ました。\");\r\n            }\r\n        }\r\n    }, options);\r\n\r\n    useEffect(() => {\r\n        //console.log(location.search);\r\n\r\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\r\n        if (targetElement) {\r\n            observer.observe(targetElement); // ターゲット要素をobserve\r\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\r\n            if (targetElement.isIntersecting) {\r\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            }\r\n        }\r\n        return () => {\r\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\r\n        };\r\n\r\n        //パラメータを取得\r\n    }, []); // []を指定して初期状態のみで実行されるようにする\r\n}\r\nexport default Quiz_list;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\contract\\wait_Modal.jsx",[],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\quiz_simple.jsx",["389","390","391","392","393","394","395","396","397","398","399","400","401","402"],[],"import { useEffect, useState } from \"react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Modal from \"./Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./quiz_simple.css\";\r\n\r\nfunction Time_diff(props) {\r\n    function convertSecondsToHours(secondsLimit, secondsStart) {\r\n        let isBeforeStartline = false;\r\n\r\n        const date1 = new Date(); // 1つ目のDateオブジェクト\r\n        const date2 = new Date(secondsLimit * 1000); // 2つ目のDateオブジェクト\r\n        const date3 = new Date(secondsStart * 1000);\r\n\r\n        const epochTime1 = Math.floor(date1.getTime() / 1000); // 現在時刻を秒単位のエポック時間に変換\r\n        const epochTime2 = Math.floor(date2.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\r\n        const epochTime3 = Math.floor(date3.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\r\n        // console.log(\"/////\");\r\n        // console.log(date2,seconds);\r\n        // console.log( epochTime1 , epochTime2,epochTime1 - epochTime2); // タイムリミットと現在時刻の差を表示\r\n        // console.log(date1.toISOString());\r\n        // console.log(date2.toISOString());\r\n        // console.log(\"////\")\r\n\r\n        let elapsedTime = 0;\r\n\r\n        if (epochTime1 < epochTime3) {\r\n            elapsedTime = Math.floor(Math.abs(epochTime3 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\r\n            elapsedTime = new Date(elapsedTime * 1000);\r\n            isBeforeStartline = true;\r\n        } else {\r\n            elapsedTime = Math.floor(Math.abs(epochTime2 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\r\n            elapsedTime = new Date(elapsedTime * 1000);\r\n        }\r\n\r\n        //console.log(elapsedTime);\r\n\r\n        const labels = [\"年\", \"ヶ月\", \"日\", \"時間\", \"分\", \"秒\"];\r\n        let date = [];\r\n        date.push(elapsedTime.getUTCFullYear() - 1970);\r\n        date.push(elapsedTime.getUTCMonth());\r\n        date.push(elapsedTime.getUTCDate() - 1);\r\n        date.push(elapsedTime.getUTCHours());\r\n        date.push(elapsedTime.getUTCMinutes());\r\n        date.push(elapsedTime.getUTCSeconds());\r\n        let res = \"\";\r\n        let count = 0;\r\n        let i = 0;\r\n\r\n        for (i = 0; i <= date.length; i++) {\r\n            //console.log(date[i]);\r\n            if (date[i] != 0) {\r\n                //count =i;\r\n                break;\r\n            }\r\n        }\r\n        for (i; i < date.length; i++) {\r\n            res += date[i].toString() + labels[i];\r\n        }\r\n        if (isBeforeStartline) {\r\n            return \"回答開始時間まで\" + res;\r\n        } else {\r\n            if (epochTime2 - epochTime1 > 0) {\r\n                return \"締め切りまで \" + res;\r\n            } else {\r\n                return \"締切終了\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //console.log(parseInt(props.limit[\"_hex\"]));\r\n    return (\r\n        <div>\r\n            {/* {now}<br/>\r\n            {targetDate}<br/> */}\r\n            {convertSecondsToHours(parseInt(props.limit), parseInt(props.start))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Simple_quiz(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [isreward, setIsreward] = useState(true);\r\n    const [ispayment, setIspayment] = useState(false);\r\n    useEffect(() => {\r\n        console.log(\"show\", show);\r\n        if (Number(props.quiz[7]) == 0) {\r\n            setIsreward(false);\r\n        }\r\n        if (props.quiz[11]) {\r\n            setIspayment(true);\r\n            setIsreward(false);\r\n        }\r\n    }, [show]);\r\n    console.log(Number(props.quiz[7]));\r\n    console.log(isreward)\r\n    const search = useLocation().search;\r\n    console.log(props.quiz);\r\n    const cardStatusClass = Number(props.quiz[10]) === 0 ? 'bg-blue' : '';//追加した\r\n    return (\r\n        <>\r\n            {/* <Modal show={show} setShow={setShow} id={props.quiz[0].toNumber()} /> */}\r\n            <div onClick={() => setShow(true)}>\r\n                <div className={`quiz_card ${cardStatusClass} ${ispayment == true ? 'border border-danger ' : ''} ${isreward == true ? 'border border-primary' : ''}`}>\r\n                    <Link to={{ pathname: \"/answer_quiz/\" + Number(props.quiz[0]), state: { back_page: 0 } }} style={{ color: \"black\", textDecoration: \"none\" }}>\r\n                        <div className=\"row quiz_card_1\">\r\n                            <div className=\"col-2\">\r\n                                <img src={props.quiz[4]} className=\"img-fluid\"></img>\r\n                            </div>\r\n                            <div className=\"col-10\" style={{ textAlign: \"left\" }}>\r\n                                <div className=\"row h-20\">\r\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[2]}</div>\r\n                                </div>\r\n                                <div className=\"row h-80\" style={{ whiteSpace: \"pre-wrap\", fontSize: \"14px\", lineHeight: \"1\" }}>\r\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[3]}</div>\r\n                                </div>\r\n                                <div className=\"row h-20\" style={{ fontSize: \"14px\" }}>\r\n                                    <Time_diff start={Number(props.quiz[5])} limit={Number(props.quiz[6])} />\r\n                                </div>\r\n                                <div className=\"d-flex\" style={{ fontSize: \"14px\", lineHeight: \"1\" }}>\r\n                                    {/* <div className=\"col-4 \">{Date(props.item[4].toNumber() * 1000)}</div> */}\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">報酬</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[7]) / (10 ** 18)}TFT\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">回答者数</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[8])}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">上限</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[9])}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">状態</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[10]) == 0 ? \"未解答\" : Number(props.quiz[10]) == 1 ? \"不正解\" : Number(props.quiz[10]) == 2 ? \"正解\" : Number(props.quiz[10]) == 3 ? \"解答済み\" : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3 \">正解数:{props.quiz[7].toNumber()}</div>\r\n                            <div className=\"col-3 \">上限:{props.quiz[8].toNumber()}</div>\r\n                            <div className=\"col-3 \"> 状態:{props.quiz[9].toNumber()}</div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Simple_quiz;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_select.jsx",["403","404","405","406"],[],"import {useState} from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {ImCross} from \"react-icons/im\";\r\nimport Answer_area1 from \"./answer_form1\";\r\nimport Answer_area2 from \"./answer_form2\";\r\n\r\nfunction Answer_select(props) {\r\n    const [component, setComponent] = useState(\"Component1\");\r\n\r\n    const handleClick = (event) => {\r\n        const {name} = event.target;\r\n        setComponent(name);\r\n        if (name === \"Answer_area1\") {\r\n            props.setAnswer_type(0);\r\n        } else if (name === \"Answer_area2\") {\r\n            props.setAnswer_type(1);\r\n        }\r\n    };\r\n\r\n    if (true) {\r\n        return (\r\n            <div>\r\n                <div className=\"btn-group\" style={{margin: \"20px\"}}>\r\n                    <button type=\"button\" name=\"Answer_area1\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        択一形式\r\n                    </button>\r\n                </div>\r\n                <div className=\"btn-group\" style={{margin: \"20px\"}}>\r\n                    <button type=\"button\" name=\"Answer_area2\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        入力形式\r\n                    </button>\r\n                </div>\r\n\r\n                {/* name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/ */}\r\n                {component === \"Answer_area1\" && <Answer_area1 name={\"択一形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\r\n                {component === \"Answer_area2\" && <Answer_area2 name={\"入力形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Answer_select;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\navbar\\Modal_change_network.jsx",["407","408","409"],[],"import { useEffect, useState } from \"react\";\r\n\r\nconst Modal_change_network = (props) => {\r\n    if (props.chain_id) {\r\n        return (\r\n            <>\r\n                {props.chain_id != 80002 ? ( // showFlagがtrueだったらModalを表示する\r\n                    <div id=\"overlay\" class=\"stars\" style={{}}>\r\n                        <div\r\n                            id=\"modalContent\"\r\n                            style={{\r\n                                color: \"white\",\r\n                                position: \"fixed\",\r\n                                top: \"50%\" /* 要素の上端を画面の中央に */,\r\n                                left: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                            }}\r\n                        >\r\n                            {/* 文字を白くする */}\r\n                            <h2>私たちの利用するamoyに接続してください</h2>\r\n                            <br />\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-dark\"\r\n                                onClick={() => {\r\n                                    props.cont.change_network();\r\n                                }}\r\n                            >\r\n                                Change Network\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <></> // showFlagがfalseの場合はModalは表示しない\r\n                )}\r\n            </>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n};\r\n\r\nexport default Modal_change_network;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\user_card.jsx",["410","411","412","413","414"],[],"import { useState, useEffect } from \"react\";\r\n\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\nimport Change_user from \"./change_user\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction User_card(props) {\r\n    const [name, SetName] = useState(props.user_name);\r\n    const [image_url, SetImage_url] = useState(props.icons);\r\n    const [nameError, SetNameError] = useState(\"\");\r\n    const [state, Setstate] = useState(\"\");\r\n\r\n    const update_handler = () => {\r\n        console.log(\"update_handler\");\r\n        console.log(name);\r\n        console.log(image_url);\r\n        if (nameError == false) {\r\n            props.cont.update_user_data(name, image_url);\r\n        } else {\r\n            Setstate(false);\r\n        }\r\n    };\r\n    const handle_SetName = (event) => {\r\n        const value = event.target.value;\r\n        SetName(value);\r\n\r\n        // 電話番号の正規表現パターン\r\n        const phonePattern = /^\\d{2}[a-zA-Z]\\d{4}$/;\r\n\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!phonePattern.test(value)) {\r\n            SetNameError(true);\r\n            console.log(\"errr\");\r\n        } else {\r\n            SetNameError(false);\r\n        }\r\n    };\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        console.log(\"初回のみ実行\");\r\n        console.log(props.state);\r\n        console.log(props.user_name);\r\n        console.log(props.icons);\r\n        Setstate(props.state);\r\n    }, []);\r\n\r\n    if (true) {\r\n        return (\r\n            <>\r\n                <div className=\"user_card\">\r\n                    {/* q:左上に表示 */}\r\n\r\n                    {/* <Button variant=\"primary\" onClick={() => Setstate(false)} style={{ position: 'absolute', top: 0, left: 0 }}>\r\n                        更新\r\n                    </Button> */}\r\n                    {/* <img\r\n                        src={props.icons}\r\n                        alt=\"\"\r\n                        style={{\r\n                            width: `75px`,\r\n                            height: `75px`,\r\n                            borderRadius: '50%',\r\n                        }}\r\n                    /> */}\r\n                    {/* <div className=\"user_name\">{props.user_name}</div> */}\r\n                    <Button variant=\"primary\" onClick={() => props.cont.add_token_wallet()} style={{ position: \"absolute\", top: 0, left: 0 }}>\r\n                        トークンをwalletに追加\r\n                    </Button>\r\n                    <div className=\"address\" style={{ \"margin-top\": \"50px\" }}>\r\n                        {props.address.slice(0, 20)}....\r\n                    </div>\r\n\r\n                    {/* マージンを設定 */}\r\n                    <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n                        <div className=\"col token d-flex flex-column\">\r\n                            <div>保有トークン</div>\r\n                            <div>{props.token}TFT</div>\r\n                        </div>\r\n                        <div className=\"col token-result d-flex flex-column\">\r\n                            <div>現在の順位</div>\r\n                            <div>{props.num_of_student}人中{props.rank}位</div>\r\n                        </div>\r\n                        <div className=\"col token-result d-flex flex-column\">\r\n                            <div>獲得点数</div>\r\n                            <div>{Number(props.result)/30}点</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"user_card\">\r\n                    <Button variant=\"primary\" onClick={() => Setstate(true)} style={{ position: \"absolute\", top: 0, left: 0 }}>\r\n                        <>キャンセル</>\r\n                    </Button>\r\n                    <div style={{ \"margin-top\": \"30px\" }}>\r\n                        <Form onSubmit={update_handler}>\r\n                            <div className=\"icon_image\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"form_image_url\" style={{ textAlign: \"left\" }}>\r\n                                    <Form.Label>アイコン</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"image_url\" value={image_url} onChange={(event) => SetImage_url(event.target.value)} />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <img src={image_url} alt=\"\" style={{ width: `75px`, height: `75px`, borderRadius: \"50%\" }} />\r\n\r\n                            <div className=\"user_name\">\r\n                                {nameError && <p style={{ color: \"red\" }}>入力形式が間違っています</p>}\r\n                                <Form.Group className=\"mb-3\" controlId=\"form_name\" style={{ textAlign: \"left\" }}>\r\n                                    <Form.Label>User_Name 例:22P5000</Form.Label>\r\n                                    <Form.Control type=\"name\" placeholder=\"Enter Name\" value={name} onChange={handle_SetName} />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"primary\" onClick={update_handler} style={{ marginTop: \"20px\" }}>\r\n                                <>更新</>\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"address\">{props.address.slice(0, 20)}</div>\r\n                    <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n                        <div className=\"col token d-flex flex-column\">\r\n                            <div>保有トークン</div>\r\n                            <div>{props.token}TFT</div>\r\n                        </div>\r\n                        <div className=\"col token-result d-flex flex-column\">\r\n                            <div>授業での配点</div>\r\n                            <div>{Number(props.result)/30}点</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default User_card;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\history_list.jsx",["415","416","417","418","419","420","421","422","423","424","425"],[],"import Form from \"react-bootstrap/Form\";\r\nimport {useState, useEffect, useRef} from \"react\";\r\nimport MDEditor, {selectWord} from \"@uiw/react-md-editor\";\r\nimport {resolvePath, useParams} from \"react-router-dom\";\r\nimport Simple_history from \"./history_simple\";\r\nimport {Link} from \"react-router-dom\";\r\nfunction History_list(props) {\r\n    //1回の更新で追加で表示する個数\r\n    //画面を満たす個数を計算して、add_numに代入\r\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\r\n\r\n    const history_list = props.history_list;\r\n    const Set_history_list = props.Set_history_list;\r\n\r\n    //クイズのリストを取得\r\n    const get_history_list = async (now_sum) => {\r\n        //追加分のクイズ用のリスト\r\n        let add_history_list = [];\r\n\r\n        //クイズの総数を超えていたら\r\n\r\n        if (now_sum - add_num.current < 0) {\r\n            //now_numからquiz_numまでのクイズを取得\r\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, 0);\r\n            //now_numを0にする\r\n            props.now_numRef.current = 0;\r\n        } else {\r\n            //クイズの総数を超えていなかったら\r\n            //now_numからnow_num+add_numまでのクイズを取得\r\n\r\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, now_sum - add_num.current);\r\n            //now_numをnow_num+add_numにする\r\n            props.now_numRef.current = now_sum - add_num.current;\r\n        }\r\n        //new_quiz_listをmapで展開して、quiz_listに追加\r\n        let now_history_list = [];\r\n\r\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\r\n\r\n        console.log(add_history_list);\r\n        add_history_list.map((history) => {\r\n            now_history_list.push(<Simple_history history={history} />); //DOMとして追加\r\n        });\r\n        Set_history_list((history_list) => [...history_list, ...now_history_list]);\r\n    };\r\n\r\n    const options = {\r\n        root: null, // ビューポートをルートとする\r\n        rootMargin: \"-10px\", // ビューポートに対するマージン\r\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        for (const entry of entries) {\r\n            if (entry.isIntersecting) {\r\n                // ターゲット要素がビューポートに入った時の処理\r\n                //console.log(\"ターゲット要素がビューポートに入りました。\");\r\n                get_history_list(props.now_numRef.current);\r\n            } else {\r\n                // ターゲット要素がビューポートから出た時の処理\r\n                //console.log(\"ターゲット要素がビューポートから出ました。\");\r\n            }\r\n        }\r\n    }, options);\r\n\r\n    useEffect(() => {\r\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\r\n        if (targetElement) {\r\n            observer.observe(targetElement); // ターゲット要素をobserve\r\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\r\n            if (targetElement.isIntersecting) {\r\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\r\n                get_history_list(props.now_numRef.current);\r\n            }\r\n        }\r\n        return () => {\r\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\r\n        };\r\n    }, []); // []を指定して初期状態のみで実行されるようにする\r\n}\r\nexport default History_list;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\add_teacher.jsx",["426"],[],"import React, {useState, useEffect} from \"react\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\nfunction Add_teacher(props) {\r\n    const [addteacher, setAddTeacher] = useState(\"\");\r\n    const [teachers, setTeachers] = useState([]);\r\n\r\n    function add_teacher() {\r\n        props.cont.add_teacher(addteacher);\r\n    }\r\n    useEffect(() => {\r\n        props.cont.get_teachers().then((result) => {\r\n            //console.log(result);\r\n            setTeachers(result);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mypage\">\r\n                <div className=\"add_student\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"form_titile\" style={{textAlign: \"left\"}}>\r\n                            <Form.Label> 追加する教員orTAのアドレスを入力してください(1人ずつ)</Form.Label>\r\n                            <Form.Control type=\"text\" value={addteacher} onChange={(event) => setAddTeacher(event.target.value)} />\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                    <Button variant=\"primary\" onClick={() => add_teacher()} style={{marginTop: \"20px\"}}>\r\n                        教員orTAをこのコントラクトに追加する\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h5>教員orTAの一覧</h5>\r\n                {teachers.map((item, index) => {\r\n                    return <div key={index}>{item}</div>;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Add_teacher;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\quiz_list.jsx",["427","428","429","430","431","432","433","434","435","436"],[],"import Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useLocation } from \"react-router-dom\";\r\nimport Simple_quiz from \"./quiz_simple\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nfunction Quiz_list(props) {\r\n    const location = useLocation();\r\n    //画面を満たす個数を計算して、add_numに代入\r\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\r\n\r\n    //表示するクイズのリスト\r\n    // const [quiz_list,Set_quiz_list] =useState([]);\r\n\r\n    const quiz_list = props.quiz_list;\r\n    const Set_quiz_list = props.Set_quiz_list;\r\n\r\n    //クイズのリストを取得\r\n    const get_quiz_list = async (now) => {\r\n        //追加分のクイズ用のリスト\r\n        let add_quiz_list = [];\r\n\r\n        //クイズの総数を超えていたら\r\n        if (now - add_num.current < 0) {\r\n            //now_numからquiz_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_all_data_list(now, 0);\r\n            //now_numを0にする\r\n            props.now_numRef.current = 0;\r\n        } else {\r\n            //クイズの総数を超えていなかったら\r\n            //now_numからnow_num+add_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_all_data_list(now, now - add_num.current);\r\n            console.log(add_quiz_list);\r\n            //now_numをnow_num+add_numにする\r\n            props.now_numRef.current = now - add_num.current;\r\n        }\r\n        //new_quiz_listをmapで展開して、quiz_listに追加\r\n        let now_quiz_list = [];\r\n\r\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\r\n        add_quiz_list.map((quiz) => {\r\n            console.log(quiz)\r\n            now_quiz_list.push(<Simple_quiz quiz={quiz} />); //DOMとして追加\r\n        });\r\n\r\n        //quiz_listにnow_quiz_listを追加\r\n        //console.log([...quiz_list, ...now_quiz_list]);\r\n        Set_quiz_list((quiz_list) => [...quiz_list, ...now_quiz_list]);\r\n    };\r\n\r\n    const options = {\r\n        root: null, // ビューポートをルートとする\r\n        rootMargin: \"-10px\", // ビューポートに対するマージン\r\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        for (const entry of entries) {\r\n            if (entry.isIntersecting) {\r\n                // ターゲット要素がビューポートに入った時の処理\r\n                console.log(\"ターゲット要素がビューポートに入りました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            } else {\r\n                // ターゲット要素がビューポートから出た時の処理\r\n                console.log(\"ターゲット要素がビューポートから出ました。\");\r\n            }\r\n        }\r\n    }, options);\r\n\r\n    useEffect(() => {\r\n        console.log(location.search);\r\n\r\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\r\n        if (targetElement) {\r\n            observer.observe(targetElement); // ターゲット要素をobserve\r\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\r\n            if (targetElement.isIntersecting) {\r\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            }\r\n        }\r\n        return () => {\r\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\r\n        };\r\n\r\n        //パラメータを取得\r\n    }, []); // []を指定して初期状態のみで実行されるようにする\r\n}\r\nexport default Quiz_list;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\add_student.jsx",["437"],[],"import React, {useState, useEffect} from \"react\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\nfunction Add_students(props) {\r\n    const [addStudent, setAddStudent] = useState(\"\");\r\n    const [addStudent_list, setAddStudent_list] = useState([]);\r\n\r\n    function add_student() {\r\n        console.log(addStudent_list);\r\n        props.cont.add_student(addStudent_list);\r\n    }\r\n    //addstudentが更新されたら実行\r\n    useEffect(() => {\r\n        setAddStudent_list(addStudent.split(\"\\n\"));\r\n        console.log(addStudent_list);\r\n    }, [addStudent]);\r\n\r\n    return (\r\n        <div className=\"mypage\">\r\n            <div className=\"add_student\">\r\n                追加する学生のアドレスを入力してください\r\n                <Form.Group className=\"mb-3\" style={{textAlign: \"left\"}}>\r\n                    <Form.Label>生徒のアドレスを入力して下さい</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={addStudent.split(\"\\n\").length + 3} value={addStudent} onChange={(event) => setAddStudent(event.target.value)} />\r\n                </Form.Group>\r\n                {addStudent_list.map((item, index) => {\r\n                    return <div key={index}>{item}</div>;\r\n                })}\r\n                <Button variant=\"primary\" onClick={() => add_student()} style={{marginTop: \"20px\"}}>\r\n                    生徒をこのコントラクトに追加する\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add_students;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\quiz_simple.jsx",["438","439","440","441","442","443","444","445","446","447","448"],[],"import { useEffect, useState } from \"react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Modal from \"./Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./quiz_simple.css\";\r\nimport { Contracts_MetaMask } from \"../../../contract/contracts\";\r\n\r\nfunction Time_diff(props) {\r\n    function convertSecondsToHours(secondsLimit, secondsStart) {\r\n        let isBeforeStartline = false;\r\n\r\n        const date1 = new Date(); // 1つ目のDateオブジェクト\r\n        const date2 = new Date(secondsLimit * 1000); // 2つ目のDateオブジェクト\r\n        const date3 = new Date(secondsStart * 1000);\r\n\r\n        const epochTime1 = Math.floor(date1.getTime() / 1000); // 現在時刻を秒単位のエポック時間に変換\r\n        const epochTime2 = Math.floor(date2.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\r\n        const epochTime3 = Math.floor(date3.getTime() / 1000); // タイムリミットを秒単位のエポック時間に変換\r\n        // console.log(\"/////\");\r\n        // console.log(date2,seconds);\r\n        // console.log( epochTime1 , epochTime2,epochTime1 - epochTime2); // タイムリミットと現在時刻の差を表示\r\n        // console.log(date1.toISOString());\r\n        // console.log(date2.toISOString());\r\n        // console.log(\"////\")\r\n        console.log(epochTime1);\r\n\r\n        let elapsedTime = 0;\r\n\r\n        if (epochTime1 < epochTime3) {\r\n            elapsedTime = Math.floor(Math.abs(epochTime3 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\r\n            elapsedTime = new Date(elapsedTime * 1000);\r\n            isBeforeStartline = true;\r\n        } else {\r\n            elapsedTime = Math.floor(Math.abs(epochTime2 - epochTime1)); // 二つのエポック時間の差をミリ秒単位で求める\r\n            elapsedTime = new Date(elapsedTime * 1000);\r\n        }\r\n\r\n        //console.log(elapsedTime);\r\n\r\n        const labels = [\"年\", \"ヶ月\", \"日\", \"時間\", \"分\", \"秒\"];\r\n        let date = [];\r\n        date.push(elapsedTime.getUTCFullYear() - 1970);\r\n        date.push(elapsedTime.getUTCMonth());\r\n        date.push(elapsedTime.getUTCDate() - 1);\r\n        date.push(elapsedTime.getUTCHours());\r\n        date.push(elapsedTime.getUTCMinutes());\r\n        date.push(elapsedTime.getUTCSeconds());\r\n        let res = \"\";\r\n        let count = 0;\r\n        let i = 0;\r\n\r\n        for (i = 0; i <= date.length; i++) {\r\n            //console.log(date[i]);\r\n            if (date[i] != 0) {\r\n                //count =i;\r\n                break;\r\n            }\r\n        }\r\n        for (i; i < date.length; i++) {\r\n            res += date[i].toString() + labels[i];\r\n        }\r\n        if (isBeforeStartline) {\r\n            return \"回答開始時間まで\" + res;\r\n        } else {\r\n            if (epochTime2 - epochTime1 > 0) {\r\n                return \"締め切りまで \" + res;\r\n            } else {\r\n                return \"締切終了\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //console.log(parseInt(props.limit[\"_hex\"]));\r\n    return (\r\n        <div>\r\n            {/* {now}<br/>\r\n            {targetDate}<br/> */}\r\n            {convertSecondsToHours(parseInt(props.limit), parseInt(props.start))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Simple_quiz(props) {\r\n    let contract = new Contracts_MetaMask();\r\n    const search = useLocation().search;\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [is_payment, setIs_payment] = useState(false);\r\n\r\n    console.log(props.quiz);\r\n    console.log(props.quiz[8]);\r\n    console.log(props.quiz[9]);\r\n\r\n    async function get_is_payment(id){\r\n        setIs_payment(await contract.get_is_payment(id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"show\", show);\r\n    }, [show]);\r\n\r\n    useEffect(() =>{\r\n        get_is_payment(props.quiz[0]);\r\n    }, []);\r\n    console.log(is_payment);\r\n\r\n    return (\r\n        <>\r\n\r\n            <div onClick={() => setShow(true)}>\r\n                <div className={`quiz_card ${is_payment ? 'border border-danger' : '' }`}>\r\n                    <Link to={{ pathname: \"/answer_quiz/\" + Number(props.quiz[0]), state: { back_page: 0 } }} style={{ color: \"black\", textDecoration: \"none\" }}>\r\n                        <div className=\"row quiz_card_1\">\r\n                            <div className=\"col-2\">\r\n                                <img src={props.quiz[4]} className=\"img-fluid\"></img>\r\n                            </div>\r\n                            <div className=\"col-10\" style={{ textAlign: \"left\" }}>\r\n                                <div className=\"row h-20\">\r\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[2]}</div>\r\n                                </div>\r\n                                <div className=\"row h-80\" style={{ whiteSpace: \"pre-wrap\", fontSize: \"14px\", lineHeight: \"1\" }}>\r\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 \">{props.quiz[3]}</div>\r\n                                </div>\r\n                                <div className=\"row h-20\" style={{ fontSize: \"14px\" }}>\r\n                                    <Time_diff start={Number(props.quiz[8])} limit={Number(props.quiz[9])} />\r\n                                </div>\r\n                                <div className=\"d-flex\" style={{ fontSize: \"14px\", lineHeight: \"1\" }}>\r\n\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">報酬</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[10]) / (10 ** 18)}TFT\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">回答数</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[11])}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">上限</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[12])}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <div className=\"col\">状態</div>\r\n                                        <div className=\"col\" style={{ textAlign: \"center\" }}>\r\n                                            {Number(props.quiz[13]) == 0 ? \"未回答\" : Number(props.quiz[13]) == 1 ? \"不正解\" : Number(props.quiz[13]) == 2 ? \"正解\" : Number(props.quiz[13]) == 3 ? \"解答済み\" :\"\"}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    <div style={{ textAlign: \"right\" }}>\r\n                        <Button as={Link} to={`/edit_quiz/${Number(props.quiz[0])}`} state={{ args: [Number(props.quiz[0]), props.quiz[1], props.quiz[2], props.quiz[3], props.quiz[4], props.quiz[5], Number(props.quiz[6]), props.quiz[7], Number(props.quiz[8]), Number(props.quiz[9]), Number(props.quiz[10]), Number(props.quiz[11]), Number(props.quiz[12]), Number(props.quiz[13])] }} variant=\"primary\" style={{ marginTop: \"20px\" }}>\r\n                            編集\r\n                        </Button>\r\n                        <Button as={Link} to={`/investment_page/${Number(props.quiz[0])}`} state={{ args: [Number(props.quiz[0])] }} variant=\"primary\" style={{ marginTop: \"20px\", marginLeft: \"10px\", marginRight: \"0px\" }}>\r\n                            報酬の追加\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Simple_quiz;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_select.jsx",["449","450","451","452","453"],[],"import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport Answer_area1 from \"./answer_form1\";\r\nimport Answer_area2 from \"./answer_form2\";\r\n\r\nfunction Answer_select(props) {\r\n    const [component, setComponent] = useState(\"component1\");\r\n\r\n    const handleClick = (event) => {\r\n        const { name } = event.target;\r\n        setComponent(name);\r\n        if (name === \"Answer_area1\") {\r\n            props.setAnswer_type(0);\r\n        } else if (name === \"Answer_area2\") {\r\n            props.setAnswer_type(1);\r\n        }\r\n    };\r\n\r\n    if (true) {\r\n        return (\r\n            <div>\r\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\r\n                    <button type=\"button\" name=\"Answer_area1\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        択一形式\r\n                    </button>\r\n                </div>\r\n                <div className=\"btn-group\" style={{ margin: \"20px\" }}>\r\n                    <button type=\"button\" name=\"Answer_area2\" className=\"btn btn-primary\" onClick={handleClick}>\r\n                        入力形式\r\n                    </button>\r\n                </div>\r\n\r\n                {/* name={\"回答の追加\"} variable={answer_data} variable1={correct} set={setAnswer_data} set1={setCorrect}/ */}\r\n                {component === \"Answer_area1\" && <Answer_area1 name={\"択一形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\r\n                {component === \"Answer_area2\" && <Answer_area2 name={\"入力形式\"} variable={props.variable} variable1={props.variable1} set={props.set} set1={props.set1} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Answer_select;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\admin_page\\components\\view_results.jsx",["454","455","456","457"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { Contracts_MetaMask } from \"../../../contract/contracts\";\r\n\r\nfunction getCurrentDateTime() {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, '0'); // 月は0から始まるため+1し、2桁にパディング\r\n    const day = String(now.getDate()).padStart(2, '0'); // 日を2桁にパディング\r\n    const hours = String(now.getHours()).padStart(2, '0'); // 時を2桁にパディング\r\n    const minutes = String(now.getMinutes()).padStart(2, '0'); // 分を2桁にパディング\r\n    const seconds = String(now.getSeconds()).padStart(2, '0'); // 秒を2桁にパディング\r\n\r\n    const formattedDateTime = `${year}${month}${day}${hours}${minutes}${seconds}`;\r\n    return formattedDateTime;\r\n}\r\n\r\nfunction Create_csvlink(props) {\r\n    return (\r\n        <div>\r\n            <div><CSVLink filename={`students_data_${getCurrentDateTime()}.csv`} variant=\"primary\" data={props.cont[0]}>こちらから学生の成績データをダウンロード</CSVLink></div>\r\n            <div><CSVLink filename={`quizs_data_${getCurrentDateTime()}.csv`} variant=\"primary\" data={props.cont[1]}>こちらから小テストの統計データをダウンロード</CSVLink></div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction View_result(props) {\r\n\r\n    let contract = new Contracts_MetaMask();\r\n    const [results, setResults] = useState([]);\r\n    const [data_for_survey_users, setData_for_survey_users] = useState(null);\r\n    const [data_for_survey_quizs, setData_for_survey_quizs] = useState(null);\r\n    const [usersData, setUsersData] = useState(null);\r\n    const [quizsData, setQuizsData] = useState(null);\r\n    const [csvdownloader, setCsvdownloader] = useState(false);\r\n\r\n    const handle_export_csv = () => {\r\n        //console.log(data_for_survey_users);\r\n\r\n        const users_data = [\r\n            Object.keys(data_for_survey_users[0])\r\n        ]\r\n        for (let i = 0; i < data_for_survey_users.length; i++) {\r\n            users_data.push([data_for_survey_users[i].user, Number(data_for_survey_users[i].create_quiz_count).toString(), (Number(data_for_survey_users[i].result) / (10 ** 18)).toString(), (Number(data_for_survey_users[i].answer_count).toString())]);\r\n        }\r\n\r\n        const quizs_data = [\r\n            Object.keys(data_for_survey_quizs[0])\r\n        ]\r\n        for (let i = 0; i < data_for_survey_quizs.length; i++) {\r\n            quizs_data.push([(Number(data_for_survey_quizs[i].reward) / (10 ** 18)).toString(), (Number(data_for_survey_quizs[i].respondent_count)).toString()]);\r\n        }\r\n\r\n        setUsersData(users_data);\r\n        setQuizsData(quizs_data);\r\n        setCsvdownloader(true);\r\n    }\r\n\r\n    async function get_data_for_survey() {\r\n        setData_for_survey_users(await contract.get_data_for_survey_users());\r\n        setData_for_survey_quizs(await contract.get_data_for_survey_quizs());\r\n    }\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n\r\n        get_data_for_survey();\r\n        props.cont.get_results().then((result) => {\r\n            console.log(result);\r\n            setResults(result);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"mypage\">\r\n\r\n            <div class=\"row\">\r\n                <Button variant=\"primary\" onClick={() => handle_export_csv()}>成績データのCSVファイルの出力</Button>\r\n                {csvdownloader === true && <Create_csvlink cont={[usersData, quizsData]} />}\r\n            </div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>address</th>\r\n                        <th>得点</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {results.map((item, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.student}</td>\r\n                                <td>{Number(item.result) / 10 ** 18 /30}点</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default View_result;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\Modal.jsx",["458","459"],[],"import React, {useState, useEffect} from \"react\";\r\nimport \"./Modal.css\";\r\nimport Answer from \"./Answer\";\r\n\r\nfunction Modal({show, setShow, children, id}) {\r\n    const closeModal = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    //戻るぼたんを押したときに発火\r\n    const overridePopstate = () => {\r\n        closeModal();\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.history.pushState(null, \"\", window.location.href);\r\n        window.addEventListener(\"popstate\", overridePopstate, false);\r\n        return () => window.removeEventListener(\"popstate\", overridePopstate, false);\r\n    }, []);\r\n\r\n    if (show) {\r\n        return (\r\n            <div id=\"overlay\">\r\n                {children}\r\n                <Answer id={id} />\r\n                <button onClick={closeModal}>Close</button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_form2.jsx",["460","461","462","463","464","465","466","467"],[],"import Button from \"react-bootstrap/Button\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {ImCross} from \"react-icons/im\";\r\nfunction Answer_area2(props) {\r\n    const [content, SetContent] = useState(\"\");\r\n    const [pattern, SetPattern] = useState(\"\");\r\n    const [example, SetExample] = useState(\"\");\r\n    const [collect, SetCollect] = useState(\"\");\r\n    const [error_exsample, SetError_Exsample] = useState(true);\r\n    const [error_collect, SetError_Collect] = useState(true);\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        props.set([]);\r\n    }, []);\r\n    //answer_dataの変更じに実行\r\n    useEffect(() => {\r\n        console.log(\"answer_dataの変更じに実行\");\r\n        console.log(props.variable);\r\n        props.set([pattern, example]);\r\n    }, [pattern, example]);\r\n\r\n    //正規表現のエラー表示\r\n    const handle_Test_pattern = (event, target_set) => {\r\n        const value = event.target.value;\r\n\r\n        console.log(pattern);\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!new RegExp(pattern).test(value)) {\r\n            target_set(true);\r\n            console.log(\"errr\");\r\n        } else {\r\n            target_set(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        //<Textarea name={\"タイトル\"} variable={title} set={setTitle}/>\r\n        <>\r\n            <p className=\"text-left\">\r\n                <font size=\"5\">{props.name}</font>{\" \"}\r\n            </p>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正規表現を入力\r\n                    <input type=\"text\" className=\"form-control\" value={pattern} onChange={(event) => SetPattern(event.target.value)} />\r\n                    {pattern}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    例を入力\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={example}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Exsample);\r\n                            SetExample(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_exsample ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正解を入力\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={props.variable1}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Collect);\r\n                            props.set1(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_collect ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Answer_area2;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\history_simple.jsx",["468","469"],[],"import {useState} from \"react\";\r\n\r\nimport {AiOutlineArrowRight} from \"react-icons/ai\";\r\nfunction Convert_time(props) {\r\n    function convertSeconds2ToHours(seconds) {\r\n        console.log(seconds);\r\n\r\n        const date = new Date(seconds * 1000); // 1つ目のDateオブジェクト\r\n\r\n        return date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n    }\r\n    return <>{convertSeconds2ToHours(props.seconds)}</>;\r\n}\r\n\r\nfunction Simple_history(props) {\r\n    console.log(props.history);\r\n    return (\r\n        // <Link to={\"/answer_quiz/\"+props.quiz[0].toNumber()} style={{ color: '#000' ,textDecoration: 'none'}}>\r\n\r\n        //q:文字を左寄せにした\r\n        //a:style={{textAlign: \"left\"}}\r\n        <div className=\"transaction_card\" style={{\"min-height\": \"100px\"}}>\r\n            <div className=\"row\" style={{margin: \"0\", padding: \"0\"}}>\r\n                <div className=\"transfer row\">\r\n                    <div className=\"col-5 left\" style={{padding: \"0\", margin: \"0\", \"text-align\": \"center\"}}>\r\n                        <div>from</div>\r\n                        <div>{props.history._owner.slice(0, 12)}</div>\r\n                        <div>recipient</div>\r\n                        <div>{props.history._sender.slice(0, 12)}</div>\r\n                    </div>\r\n\r\n                    <div className=\"col-2 center\" style={{padding: \"0\"}}>\r\n                        <AiOutlineArrowRight />\r\n                    </div>\r\n                    <div className=\"col-5 right\" style={{padding: \"0\"}}>\r\n                        <div>to</div>\r\n                        <div>{props.history._recipient.slice(0, 12)}</div>\r\n                        <div>{Number(props.history._value) / 10 ** 18}TFT</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"transfer_time\" style={{padding: \"0\", \"padding-top\": \"10px\", margin: \"0\", textAlign: \"left\"}}>\r\n                    <Convert_time seconds={Number(props.history.epoch_time)} />\r\n                </div>\r\n                <div className=\"reason\" style={{padding: \"0\", \"padding-top\": \"10px\", margin: \"0\", textAlign: \"left\"}}>\r\n                    {props.history._explanation}\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // </Link>\r\n    );\r\n}\r\nexport default Simple_history;","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\user_page\\component\\change_user.jsx",["470","471"],[],"import React, {useState, useEffect} from \"react\";\r\nimport \"./change_user.css\";\r\n\r\nfunction Change_user({show, setShow}) {\r\n    const closeModal = () => {\r\n        setShow(false);\r\n        // ブラウザの履歴に新しいエントリを追加\r\n    };\r\n\r\n    const overridePopstate = () => {\r\n        console.log(\"aaa\");\r\n\r\n        closeModal();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 現在の履歴情報を取得\r\n    }, []);\r\n\r\n    if (show) {\r\n        console.log(\"show\");\r\n        return (\r\n            <div id=\"overlay\" onClick={closeModal}>\r\n                aaaa\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Change_user;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\create_quiz\\components\\answer_form1.jsx",["472"],[],"import Button from \"react-bootstrap/Button\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {ImCross} from \"react-icons/im\";\r\nfunction Answer_area1(props) {\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        props.set([]);\r\n    }, []);\r\n    function add_answer() {\r\n        console.log(props.variable.indexOf(content));\r\n        if (props.variable.indexOf(content) === -1) {\r\n            props.set([...props.variable, content]);\r\n            console.log(content);\r\n\r\n            console.log(\"add_answer\");\r\n        }\r\n        setContent(\"\");\r\n    }\r\n    function del_answer(cont) {\r\n        for (let i = 0; i < props.variable.length; i++) {\r\n            console.log(props.variable[i]);\r\n        }\r\n        props.set(props.variable.filter((ans_, index) => ans_ !== cont));\r\n    }\r\n    return (\r\n        //<Textarea name={\"タイトル\"} variable={title} set={setTitle}/>\r\n        <>\r\n            <p className=\"text-left\">\r\n                <font size=\"5\">{props.name}</font>{\" \"}\r\n            </p>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    <textarea id=\"textarea\" className=\"form-control\" value={content} rows={content.split(\"\\n\").length} aria-describedby=\"basic-addon1\" onChange={(event) => setContent(event.target.value)} />\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={() => {\r\n                            add_answer();\r\n                        }}\r\n                    >\r\n                        追加\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {props.variable.map((cont) => {\r\n                        let check_box;\r\n                        if (props.variable1 === cont) {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.set1(cont);\r\n                                    }}\r\n                                    checked\r\n                                />\r\n                            );\r\n                        } else {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.set1(cont);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        }\r\n                        return (\r\n                            <tr key={cont}>\r\n                                <th scope=\"col\">{check_box}</th>\r\n\r\n                                <th scope=\"col\" className=\"left\">\r\n                                    {cont}\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <Button\r\n                                        variant=\"primary btn-sm \"\r\n                                        type=\"submit\"\r\n                                        onClick={() => {\r\n                                            del_answer(cont);\r\n                                        }}\r\n                                    >\r\n                                        <ImCross />\r\n                                    </Button>\r\n                                </th>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\nexport default Answer_area1;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_form2.jsx",["473","474","475","476","477","478","479","480"],[],"import Button from \"react-bootstrap/Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ImCross } from \"react-icons/im\";\r\nfunction Answer_area2(props) {\r\n    const [content, SetContent] = useState(\"\");\r\n    const [pattern, SetPattern] = useState(\"\");\r\n    const [example, SetExample] = useState(\"\");\r\n    const [collect, SetCollect] = useState(\"\");\r\n    const [error_exsample, SetError_Exsample] = useState(true);\r\n    const [error_collect, SetError_Collect] = useState(true);\r\n\r\n    //初回のみ実行\r\n    useEffect(() => {\r\n        props.set([]);\r\n    }, []);\r\n    //answer_dataの変更じに実行\r\n    useEffect(() => {\r\n        console.log(\"answer_dataの変更じに実行\");\r\n        console.log(props.variable);\r\n        props.set([pattern, example]);\r\n    }, [pattern, example]);\r\n\r\n    //正規表現のエラー表示\r\n    const handle_Test_pattern = (event, target_set) => {\r\n        const value = event.target.value;\r\n\r\n        console.log(pattern);\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!new RegExp(pattern).test(value)) {\r\n            target_set(true);\r\n            console.log(\"errr\");\r\n        } else {\r\n            target_set(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        //<Textarea name={\"タイトル\"} variable={title} set={setTitle}/>\r\n        <>\r\n            <p className=\"text-left\">\r\n                <font size=\"5\">{props.name}</font>{\" \"}\r\n            </p>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正規表現を入力\r\n                    <input type=\"text\" className=\"form-control\" value={pattern} onChange={(event) => SetPattern(event.target.value)} />\r\n                    {pattern}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    例を入力\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={example}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Exsample);\r\n                            SetExample(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_exsample ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正解を入力\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={props.variable1}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Collect);\r\n                            props.set1(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_collect ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Answer_area2;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_quiz\\components\\answer_form1.jsx",["481"],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\Modal.jsx",["482","483"],[],"C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\list_quiz\\components\\Answer.jsx",["484","485","486","487","488","489","490","491","492","493","494","495","496"],[],"import {Contracts_MetaMask} from \"../../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {useState, useEffect} from \"react\";\r\nimport MDEditor, {selectWord} from \"@uiw/react-md-editor\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nfunction Answer_type1(props) {\r\n    return (\r\n        <>\r\n            <a>\r\n                <br />\r\n                選択式\r\n            </a>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {props.quiz[6].split(\",\").map((cont) => {\r\n                        let check_box;\r\n                        if (props.answer == cont) {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                    checked\r\n                                />\r\n                            );\r\n                        } else {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        }\r\n                        return (\r\n                            <tr key={cont}>\r\n                                <th scope=\"col\">{check_box}</th>\r\n\r\n                                <th scope=\"col\" className=\"left\">\r\n                                    {cont}\r\n                                </th>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer_type2(props) {\r\n    const answer_data = props.quiz[6].split(\",\");\r\n    const pattern = answer_data[0];\r\n    const example = answer_data[1];\r\n    const [error_collect, SetError_Collect] = useState(true);\r\n\r\n    //正規表現のエラー表示\r\n    const handle_Test_pattern = (event, target_set) => {\r\n        const value = event.target.value;\r\n\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!new RegExp(pattern).test(value)) {\r\n            target_set(true);\r\n        } else {\r\n            target_set(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <a>入力形式</a>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正解を入力\r\n                    <br />\r\n                    <p>例:{example}</p>\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={props.answer}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Collect);\r\n                            props.setAnswer(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_collect ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer(props) {\r\n    const [answer, setAnswer] = useState();\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n    const id = props.id;\r\n    const [quiz, setQuiz] = useState(null);\r\n    const get_quiz = async () => {\r\n        setQuiz(await Contract.get_quiz(id));\r\n        console.log(quiz);\r\n    };\r\n\r\n    const create_answer = async () => {\r\n        // Set_useing_address(cont.get_address);\r\n        const res = Contract.create_answer(id, answer);\r\n        console.log(res);\r\n        res.then((value) => {\r\n            console.log(value.value);\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        get_quiz();\r\n    }, []);\r\n\r\n    if (quiz) {\r\n        return (\r\n            <>\r\n                <div className=\"container\" style={{\"text-align\": \"left\", \"margin-bottom\": \"50px\"}}>\r\n                    <h2>{quiz[2]}</h2>\r\n                    <br />\r\n                    <a style={{\"white-space\": \"pre-wrap\", \"font-size\": \"14px\", \"line-height\": \"1\"}}>\r\n                        <br />\r\n                        {quiz[3]}\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    <a>出題者:{quiz[1]}</a>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div data-color-mode=\"light\" className=\"left\" style={{\"text-align\": \"left\"}}>\r\n                        <MDEditor.Markdown source={quiz[5]} />\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (quiz[12].toString() == 0) {\r\n                            return <Answer_type1 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n                    {(() => {\r\n                        if (quiz[12].toString() == 1) {\r\n                            return <Answer_type2 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n\r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <Button variant=\"primary\" onClick={create_answer}>\r\n                            回答\r\n                        </Button>\r\n                    </div>\r\n                    {quiz[12].toString()}\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        <></>;\r\n    }\r\n}\r\nexport default Answer;\r\n","C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\src\\pages\\edit_list\\components\\Answer.jsx",["497","498","499","500","501","502","503","504","505","506","507","508","509"],[],{"ruleId":"510","severity":1,"message":"511","line":1,"column":10,"nodeType":"512","messageId":"513","endLine":1,"endColumn":19},{"ruleId":"510","severity":1,"message":"514","line":1,"column":21,"nodeType":"512","messageId":"513","endLine":1,"endColumn":29},{"ruleId":"510","severity":1,"message":"515","line":1,"column":31,"nodeType":"512","messageId":"513","endLine":1,"endColumn":37},{"ruleId":"510","severity":1,"message":"516","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"517","line":4,"column":40,"nodeType":"512","messageId":"513","endLine":4,"endColumn":48},{"ruleId":"510","severity":1,"message":"518","line":20,"column":11,"nodeType":"512","messageId":"513","endLine":20,"endColumn":21},{"ruleId":"519","severity":1,"message":"520","line":34,"column":74,"nodeType":"521","messageId":"522","endLine":34,"endColumn":117},{"ruleId":"519","severity":1,"message":"523","line":37,"column":67,"nodeType":"521","messageId":"522","endLine":37,"endColumn":114},{"ruleId":"519","severity":1,"message":"524","line":40,"column":65,"nodeType":"521","messageId":"522","endLine":40,"endColumn":108},{"ruleId":"519","severity":1,"message":"525","line":43,"column":71,"nodeType":"521","messageId":"522","endLine":43,"endColumn":118},{"ruleId":"519","severity":1,"message":"526","line":48,"column":61,"nodeType":"521","messageId":"522","endLine":48,"endColumn":101},{"ruleId":"519","severity":1,"message":"527","line":53,"column":65,"nodeType":"521","messageId":"522","endLine":53,"endColumn":108},{"ruleId":"519","severity":1,"message":"528","line":56,"column":69,"nodeType":"521","messageId":"522","endLine":56,"endColumn":112},{"ruleId":"519","severity":1,"message":"529","line":60,"column":75,"nodeType":"521","messageId":"522","endLine":60,"endColumn":130},{"ruleId":"519","severity":1,"message":"530","line":66,"column":21,"nodeType":"521","messageId":"522","endLine":66,"endColumn":60},{"ruleId":"510","severity":1,"message":"531","line":1,"column":10,"nodeType":"512","messageId":"513","endLine":1,"endColumn":16},{"ruleId":"510","severity":1,"message":"532","line":3,"column":10,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"510","severity":1,"message":"533","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":17},{"ruleId":"510","severity":1,"message":"534","line":4,"column":19,"nodeType":"512","messageId":"513","endLine":4,"endColumn":22},{"ruleId":"510","severity":1,"message":"535","line":4,"column":24,"nodeType":"512","messageId":"513","endLine":4,"endColumn":33},{"ruleId":"510","severity":1,"message":"536","line":4,"column":35,"nodeType":"512","messageId":"513","endLine":4,"endColumn":47},{"ruleId":"510","severity":1,"message":"537","line":4,"column":49,"nodeType":"512","messageId":"513","endLine":4,"endColumn":62},{"ruleId":"510","severity":1,"message":"538","line":7,"column":28,"nodeType":"512","messageId":"513","endLine":7,"endColumn":38},{"ruleId":"510","severity":1,"message":"539","line":10,"column":8,"nodeType":"512","messageId":"513","endLine":10,"endColumn":14},{"ruleId":"510","severity":1,"message":"540","line":16,"column":12,"nodeType":"512","messageId":"513","endLine":16,"endColumn":26},{"ruleId":"510","severity":1,"message":"541","line":17,"column":12,"nodeType":"512","messageId":"513","endLine":17,"endColumn":22},{"ruleId":"519","severity":1,"message":"542","line":49,"column":13,"nodeType":"521","messageId":"522","endLine":49,"endColumn":30},{"ruleId":"510","severity":1,"message":"543","line":1,"column":69,"nodeType":"512","messageId":"513","endLine":1,"endColumn":81},{"ruleId":"510","severity":1,"message":"544","line":1,"column":91,"nodeType":"512","messageId":"513","endLine":1,"endColumn":116},{"ruleId":"510","severity":1,"message":"545","line":1,"column":118,"nodeType":"512","messageId":"513","endLine":1,"endColumn":138},{"ruleId":"510","severity":1,"message":"533","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":17},{"ruleId":"510","severity":1,"message":"534","line":4,"column":19,"nodeType":"512","messageId":"513","endLine":4,"endColumn":22},{"ruleId":"546","severity":1,"message":"547","line":251,"column":39,"nodeType":"548","messageId":"549","endLine":251,"endColumn":41},{"ruleId":"510","severity":1,"message":"550","line":255,"column":25,"nodeType":"512","messageId":"513","endLine":255,"endColumn":30},{"ruleId":"510","severity":1,"message":"551","line":257,"column":29,"nodeType":"512","messageId":"513","endLine":257,"endColumn":33},{"ruleId":"546","severity":1,"message":"547","line":260,"column":46,"nodeType":"548","messageId":"549","endLine":260,"endColumn":48},{"ruleId":"510","severity":1,"message":"552","line":276,"column":37,"nodeType":"512","messageId":"513","endLine":276,"endColumn":40},{"ruleId":"510","severity":1,"message":"553","line":447,"column":21,"nodeType":"512","messageId":"513","endLine":447,"endColumn":29},{"ruleId":"546","severity":1,"message":"547","line":761,"column":32,"nodeType":"548","messageId":"549","endLine":761,"endColumn":34},{"ruleId":"510","severity":1,"message":"554","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"555","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":16},{"ruleId":"510","severity":1,"message":"556","line":4,"column":20,"nodeType":"512","messageId":"513","endLine":4,"endColumn":30},{"ruleId":"510","severity":1,"message":"557","line":5,"column":10,"nodeType":"512","messageId":"513","endLine":5,"endColumn":21},{"ruleId":"510","severity":1,"message":"558","line":5,"column":23,"nodeType":"512","messageId":"513","endLine":5,"endColumn":32},{"ruleId":"510","severity":1,"message":"559","line":6,"column":8,"nodeType":"512","messageId":"513","endLine":6,"endColumn":19},{"ruleId":"510","severity":1,"message":"560","line":8,"column":10,"nodeType":"512","messageId":"513","endLine":8,"endColumn":14},{"ruleId":"510","severity":1,"message":"561","line":24,"column":11,"nodeType":"512","messageId":"513","endLine":24,"endColumn":23},{"ruleId":"510","severity":1,"message":"562","line":26,"column":11,"nodeType":"512","messageId":"513","endLine":26,"endColumn":19},{"ruleId":"563","severity":1,"message":"564","line":46,"column":8,"nodeType":"565","endLine":46,"endColumn":10,"suggestions":"566"},{"ruleId":"519","severity":1,"message":"567","line":54,"column":17,"nodeType":"521","messageId":"522","endLine":54,"endColumn":232},{"ruleId":"568","severity":1,"message":"569","line":57,"column":46,"nodeType":"570","messageId":"571","endLine":57,"endColumn":48},{"ruleId":"510","severity":1,"message":"572","line":10,"column":9,"nodeType":"512","messageId":"513","endLine":10,"endColumn":17},{"ruleId":"510","severity":1,"message":"573","line":11,"column":7,"nodeType":"512","messageId":"513","endLine":11,"endColumn":13},{"ruleId":"510","severity":1,"message":"574","line":14,"column":12,"nodeType":"512","messageId":"513","endLine":14,"endColumn":26},{"ruleId":"510","severity":1,"message":"575","line":14,"column":28,"nodeType":"512","messageId":"513","endLine":14,"endColumn":46},{"ruleId":"510","severity":1,"message":"576","line":29,"column":20,"nodeType":"512","messageId":"513","endLine":29,"endColumn":29},{"ruleId":"510","severity":1,"message":"577","line":34,"column":12,"nodeType":"512","messageId":"513","endLine":34,"endColumn":17},{"ruleId":"510","severity":1,"message":"578","line":34,"column":19,"nodeType":"512","messageId":"513","endLine":34,"endColumn":27},{"ruleId":"510","severity":1,"message":"579","line":63,"column":15,"nodeType":"512","messageId":"513","endLine":63,"endColumn":19},{"ruleId":"510","severity":1,"message":"580","line":64,"column":15,"nodeType":"512","messageId":"513","endLine":64,"endColumn":20},{"ruleId":"510","severity":1,"message":"581","line":65,"column":15,"nodeType":"512","messageId":"513","endLine":65,"endColumn":18},{"ruleId":"510","severity":1,"message":"582","line":66,"column":15,"nodeType":"512","messageId":"513","endLine":66,"endColumn":20},{"ruleId":"510","severity":1,"message":"583","line":67,"column":15,"nodeType":"512","messageId":"513","endLine":67,"endColumn":22},{"ruleId":"563","severity":1,"message":"584","line":104,"column":8,"nodeType":"565","endLine":104,"endColumn":10,"suggestions":"585"},{"ruleId":"586","severity":1,"message":"587","line":128,"column":21,"nodeType":"521","endLine":128,"endColumn":60},{"ruleId":"519","severity":1,"message":"588","line":140,"column":21,"nodeType":"521","messageId":"522","endLine":140,"endColumn":193},{"ruleId":"519","severity":1,"message":"589","line":188,"column":13,"nodeType":"521","messageId":"522","endLine":188,"endColumn":43},{"ruleId":"510","severity":1,"message":"590","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":13},{"ruleId":"510","severity":1,"message":"591","line":9,"column":9,"nodeType":"512","messageId":"513","endLine":9,"endColumn":14},{"ruleId":"563","severity":1,"message":"592","line":54,"column":8,"nodeType":"565","endLine":54,"endColumn":10,"suggestions":"593"},{"ruleId":"519","severity":1,"message":"594","line":59,"column":17,"nodeType":"521","messageId":"522","endLine":59,"endColumn":184},{"ruleId":"519","severity":1,"message":"595","line":60,"column":17,"nodeType":"521","messageId":"522","endLine":60,"endColumn":233},{"ruleId":"510","severity":1,"message":"596","line":1,"column":10,"nodeType":"512","messageId":"513","endLine":1,"endColumn":12},{"ruleId":"510","severity":1,"message":"554","line":3,"column":10,"nodeType":"512","messageId":"513","endLine":3,"endColumn":14},{"ruleId":"510","severity":1,"message":"539","line":3,"column":16,"nodeType":"512","messageId":"513","endLine":3,"endColumn":22},{"ruleId":"563","severity":1,"message":"597","line":56,"column":8,"nodeType":"565","endLine":56,"endColumn":10,"suggestions":"598"},{"ruleId":"519","severity":1,"message":"599","line":89,"column":50,"nodeType":"521","messageId":"522","endLine":89,"endColumn":84},{"ruleId":"519","severity":1,"message":"600","line":90,"column":49,"nodeType":"521","messageId":"522","endLine":90,"endColumn":82},{"ruleId":"519","severity":1,"message":"601","line":91,"column":49,"nodeType":"521","messageId":"522","endLine":91,"endColumn":82},{"ruleId":"510","severity":1,"message":"602","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"510","severity":1,"message":"603","line":6,"column":8,"nodeType":"512","messageId":"513","endLine":6,"endColumn":11},{"ruleId":"510","severity":1,"message":"604","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":12},{"ruleId":"510","severity":1,"message":"605","line":9,"column":10,"nodeType":"512","messageId":"513","endLine":9,"endColumn":30},{"ruleId":"510","severity":1,"message":"606","line":13,"column":27,"nodeType":"512","messageId":"513","endLine":13,"endColumn":33},{"ruleId":"510","severity":1,"message":"607","line":13,"column":35,"nodeType":"512","messageId":"513","endLine":13,"endColumn":40},{"ruleId":"510","severity":1,"message":"608","line":13,"column":42,"nodeType":"512","messageId":"513","endLine":13,"endColumn":49},{"ruleId":"510","severity":1,"message":"609","line":13,"column":51,"nodeType":"512","messageId":"513","endLine":13,"endColumn":57},{"ruleId":"510","severity":1,"message":"610","line":14,"column":10,"nodeType":"512","messageId":"513","endLine":14,"endColumn":20},{"ruleId":"510","severity":1,"message":"611","line":14,"column":22,"nodeType":"512","messageId":"513","endLine":14,"endColumn":35},{"ruleId":"510","severity":1,"message":"612","line":14,"column":37,"nodeType":"512","messageId":"513","endLine":14,"endColumn":47},{"ruleId":"510","severity":1,"message":"613","line":15,"column":10,"nodeType":"512","messageId":"513","endLine":15,"endColumn":28},{"ruleId":"563","severity":1,"message":"614","line":73,"column":8,"nodeType":"565","endLine":73,"endColumn":10,"suggestions":"615"},{"ruleId":"519","severity":1,"message":"616","line":77,"column":13,"nodeType":"521","messageId":"522","endLine":77,"endColumn":75},{"ruleId":"510","severity":1,"message":"554","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"555","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":16},{"ruleId":"510","severity":1,"message":"556","line":4,"column":20,"nodeType":"512","messageId":"513","endLine":4,"endColumn":30},{"ruleId":"510","severity":1,"message":"557","line":5,"column":10,"nodeType":"512","messageId":"513","endLine":5,"endColumn":21},{"ruleId":"510","severity":1,"message":"558","line":5,"column":23,"nodeType":"512","messageId":"513","endLine":5,"endColumn":32},{"ruleId":"510","severity":1,"message":"559","line":6,"column":8,"nodeType":"512","messageId":"513","endLine":6,"endColumn":19},{"ruleId":"510","severity":1,"message":"560","line":8,"column":10,"nodeType":"512","messageId":"513","endLine":8,"endColumn":14},{"ruleId":"510","severity":1,"message":"561","line":25,"column":11,"nodeType":"512","messageId":"513","endLine":25,"endColumn":23},{"ruleId":"510","severity":1,"message":"562","line":27,"column":11,"nodeType":"512","messageId":"513","endLine":27,"endColumn":19},{"ruleId":"563","severity":1,"message":"564","line":51,"column":8,"nodeType":"565","endLine":51,"endColumn":10,"suggestions":"617"},{"ruleId":"519","severity":1,"message":"567","line":61,"column":21,"nodeType":"521","messageId":"522","endLine":61,"endColumn":236},{"ruleId":"568","severity":1,"message":"569","line":64,"column":50,"nodeType":"570","messageId":"571","endLine":64,"endColumn":52},{"ruleId":"510","severity":1,"message":"554","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"556","line":4,"column":20,"nodeType":"512","messageId":"513","endLine":4,"endColumn":30},{"ruleId":"510","severity":1,"message":"618","line":8,"column":10,"nodeType":"512","messageId":"513","endLine":8,"endColumn":29},{"ruleId":"546","severity":1,"message":"547","line":10,"column":19,"nodeType":"548","messageId":"549","endLine":10,"endColumn":21},{"ruleId":"619","severity":1,"message":"620","line":12,"column":13,"nodeType":"521","endLine":12,"endColumn":16},{"ruleId":"619","severity":1,"message":"620","line":21,"column":13,"nodeType":"521","endLine":21,"endColumn":16},{"ruleId":"546","severity":1,"message":"547","line":29,"column":42,"nodeType":"548","messageId":"549","endLine":29,"endColumn":44},{"ruleId":"563","severity":1,"message":"621","line":80,"column":8,"nodeType":"565","endLine":80,"endColumn":10,"suggestions":"622"},{"ruleId":"619","severity":1,"message":"620","line":98,"column":13,"nodeType":"521","endLine":98,"endColumn":16},{"ruleId":"510","severity":1,"message":"623","line":128,"column":9,"nodeType":"512","messageId":"513","endLine":128,"endColumn":17},{"ruleId":"546","severity":1,"message":"547","line":160,"column":22,"nodeType":"548","messageId":"549","endLine":160,"endColumn":24},{"ruleId":"510","severity":1,"message":"552","line":165,"column":19,"nodeType":"512","messageId":"513","endLine":165,"endColumn":22},{"ruleId":"563","severity":1,"message":"624","line":176,"column":8,"nodeType":"565","endLine":176,"endColumn":10,"suggestions":"625"},{"ruleId":"546","severity":1,"message":"547","line":183,"column":78,"nodeType":"548","messageId":"549","endLine":183,"endColumn":80},{"ruleId":"546","severity":1,"message":"547","line":183,"column":142,"nodeType":"548","messageId":"549","endLine":183,"endColumn":144},{"ruleId":"546","severity":1,"message":"547","line":183,"column":213,"nodeType":"548","messageId":"549","endLine":183,"endColumn":215},{"ruleId":"619","severity":1,"message":"620","line":187,"column":21,"nodeType":"521","endLine":187,"endColumn":103},{"ruleId":"619","severity":1,"message":"620","line":193,"column":21,"nodeType":"521","endLine":193,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":202,"column":46,"nodeType":"548","messageId":"549","endLine":202,"endColumn":48},{"ruleId":"519","severity":1,"message":"626","line":203,"column":36,"nodeType":"521","messageId":"522","endLine":203,"endColumn":102},{"ruleId":"546","severity":1,"message":"547","line":207,"column":46,"nodeType":"548","messageId":"549","endLine":207,"endColumn":48},{"ruleId":"519","severity":1,"message":"627","line":208,"column":36,"nodeType":"521","messageId":"522","endLine":208,"endColumn":102},{"ruleId":"519","severity":1,"message":"628","line":218,"column":21,"nodeType":"521","messageId":"522","endLine":218,"endColumn":77},{"ruleId":"519","severity":1,"message":"589","line":220,"column":17,"nodeType":"521","messageId":"522","endLine":220,"endColumn":65},{"ruleId":"510","severity":1,"message":"629","line":7,"column":8,"nodeType":"512","messageId":"513","endLine":7,"endColumn":21},{"ruleId":"510","severity":1,"message":"572","line":12,"column":9,"nodeType":"512","messageId":"513","endLine":12,"endColumn":17},{"ruleId":"510","severity":1,"message":"573","line":13,"column":7,"nodeType":"512","messageId":"513","endLine":13,"endColumn":13},{"ruleId":"510","severity":1,"message":"630","line":16,"column":16,"nodeType":"512","messageId":"513","endLine":16,"endColumn":21},{"ruleId":"510","severity":1,"message":"574","line":19,"column":12,"nodeType":"512","messageId":"513","endLine":19,"endColumn":26},{"ruleId":"510","severity":1,"message":"575","line":19,"column":28,"nodeType":"512","messageId":"513","endLine":19,"endColumn":46},{"ruleId":"510","severity":1,"message":"579","line":52,"column":15,"nodeType":"512","messageId":"513","endLine":52,"endColumn":19},{"ruleId":"510","severity":1,"message":"580","line":53,"column":15,"nodeType":"512","messageId":"513","endLine":53,"endColumn":20},{"ruleId":"510","severity":1,"message":"581","line":54,"column":15,"nodeType":"512","messageId":"513","endLine":54,"endColumn":18},{"ruleId":"510","severity":1,"message":"582","line":55,"column":15,"nodeType":"512","messageId":"513","endLine":55,"endColumn":20},{"ruleId":"510","severity":1,"message":"583","line":56,"column":15,"nodeType":"512","messageId":"513","endLine":56,"endColumn":22},{"ruleId":"510","severity":1,"message":"631","line":80,"column":14,"nodeType":"512","messageId":"513","endLine":80,"endColumn":25},{"ruleId":"563","severity":1,"message":"632","line":106,"column":8,"nodeType":"565","endLine":106,"endColumn":10,"suggestions":"633"},{"ruleId":"586","severity":1,"message":"587","line":132,"column":25,"nodeType":"521","endLine":132,"endColumn":64},{"ruleId":"519","severity":1,"message":"589","line":175,"column":17,"nodeType":"521","messageId":"522","endLine":175,"endColumn":47},{"ruleId":"634","severity":1,"message":"635","line":188,"column":1,"nodeType":"636","messageId":"637","endLine":211,"endColumn":4},{"ruleId":"510","severity":1,"message":"630","line":9,"column":16,"nodeType":"512","messageId":"513","endLine":9,"endColumn":21},{"ruleId":"546","severity":1,"message":"547","line":58,"column":21,"nodeType":"548","messageId":"549","endLine":58,"endColumn":23},{"ruleId":"546","severity":1,"message":"547","line":58,"column":45,"nodeType":"548","messageId":"549","endLine":58,"endColumn":47},{"ruleId":"546","severity":1,"message":"547","line":58,"column":57,"nodeType":"548","messageId":"549","endLine":58,"endColumn":59},{"ruleId":"563","severity":1,"message":"638","line":66,"column":8,"nodeType":"565","endLine":66,"endColumn":10,"suggestions":"639"},{"ruleId":"510","severity":1,"message":"554","line":1,"column":8,"nodeType":"512","messageId":"513","endLine":1,"endColumn":12},{"ruleId":"510","severity":1,"message":"514","line":2,"column":10,"nodeType":"512","messageId":"513","endLine":2,"endColumn":18},{"ruleId":"510","severity":1,"message":"555","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":16},{"ruleId":"510","severity":1,"message":"556","line":3,"column":20,"nodeType":"512","messageId":"513","endLine":3,"endColumn":30},{"ruleId":"510","severity":1,"message":"557","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":21},{"ruleId":"510","severity":1,"message":"560","line":7,"column":10,"nodeType":"512","messageId":"513","endLine":7,"endColumn":14},{"ruleId":"510","severity":1,"message":"640","line":9,"column":11,"nodeType":"512","messageId":"513","endLine":9,"endColumn":19},{"ruleId":"510","severity":1,"message":"641","line":16,"column":11,"nodeType":"512","messageId":"513","endLine":16,"endColumn":20},{"ruleId":"568","severity":1,"message":"642","line":41,"column":34,"nodeType":"570","messageId":"643","endLine":41,"endColumn":36},{"ruleId":"519","severity":1,"message":"644","line":42,"column":32,"nodeType":"521","messageId":"522","endLine":42,"endColumn":59},{"ruleId":"563","severity":1,"message":"645","line":86,"column":8,"nodeType":"565","endLine":86,"endColumn":10,"suggestions":"646"},{"ruleId":"510","severity":1,"message":"647","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":13},{"ruleId":"510","severity":1,"message":"648","line":48,"column":13,"nodeType":"512","messageId":"513","endLine":48,"endColumn":18},{"ruleId":"546","severity":1,"message":"649","line":53,"column":25,"nodeType":"548","messageId":"549","endLine":53,"endColumn":27},{"ruleId":"546","severity":1,"message":"547","line":88,"column":35,"nodeType":"548","messageId":"549","endLine":88,"endColumn":37},{"ruleId":"563","severity":1,"message":"650","line":95,"column":8,"nodeType":"565","endLine":95,"endColumn":14,"suggestions":"651"},{"ruleId":"510","severity":1,"message":"652","line":98,"column":11,"nodeType":"512","messageId":"513","endLine":98,"endColumn":17},{"ruleId":"546","severity":1,"message":"547","line":105,"column":75,"nodeType":"548","messageId":"549","endLine":105,"endColumn":77},{"ruleId":"546","severity":1,"message":"547","line":105,"column":126,"nodeType":"548","messageId":"549","endLine":105,"endColumn":128},{"ruleId":"586","severity":1,"message":"587","line":109,"column":33,"nodeType":"521","endLine":109,"endColumn":80},{"ruleId":"519","severity":1,"message":"653","line":119,"column":37,"nodeType":"521","messageId":"522","endLine":119,"endColumn":110},{"ruleId":"546","severity":1,"message":"547","line":145,"column":69,"nodeType":"548","messageId":"549","endLine":145,"endColumn":71},{"ruleId":"546","severity":1,"message":"547","line":145,"column":107,"nodeType":"548","messageId":"549","endLine":145,"endColumn":109},{"ruleId":"546","severity":1,"message":"547","line":145,"column":145,"nodeType":"548","messageId":"549","endLine":145,"endColumn":147},{"ruleId":"546","severity":1,"message":"547","line":145,"column":182,"nodeType":"548","messageId":"549","endLine":145,"endColumn":184},{"ruleId":"510","severity":1,"message":"539","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":14},{"ruleId":"510","severity":1,"message":"654","line":3,"column":9,"nodeType":"512","messageId":"513","endLine":3,"endColumn":16},{"ruleId":"519","severity":1,"message":"655","line":35,"column":50,"nodeType":"521","messageId":"522","endLine":35,"endColumn":168},{"ruleId":"519","severity":1,"message":"656","line":36,"column":50,"nodeType":"521","messageId":"522","endLine":36,"endColumn":168},{"ruleId":"510","severity":1,"message":"511","line":1,"column":10,"nodeType":"512","messageId":"513","endLine":1,"endColumn":19},{"ruleId":"510","severity":1,"message":"514","line":1,"column":21,"nodeType":"512","messageId":"513","endLine":1,"endColumn":29},{"ruleId":"546","severity":1,"message":"649","line":7,"column":33,"nodeType":"548","messageId":"549","endLine":7,"endColumn":35},{"ruleId":"510","severity":1,"message":"657","line":3,"column":10,"nodeType":"512","messageId":"513","endLine":3,"endColumn":29},{"ruleId":"510","severity":1,"message":"658","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":19},{"ruleId":"510","severity":1,"message":"577","line":13,"column":12,"nodeType":"512","messageId":"513","endLine":13,"endColumn":17},{"ruleId":"546","severity":1,"message":"547","line":19,"column":23,"nodeType":"548","messageId":"549","endLine":19,"endColumn":25},{"ruleId":"563","severity":1,"message":"659","line":47,"column":8,"nodeType":"565","endLine":47,"endColumn":10,"suggestions":"660"},{"ruleId":"510","severity":1,"message":"554","line":1,"column":8,"nodeType":"512","messageId":"513","endLine":1,"endColumn":12},{"ruleId":"510","severity":1,"message":"514","line":2,"column":9,"nodeType":"512","messageId":"513","endLine":2,"endColumn":17},{"ruleId":"510","severity":1,"message":"555","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":16},{"ruleId":"510","severity":1,"message":"556","line":3,"column":19,"nodeType":"512","messageId":"513","endLine":3,"endColumn":29},{"ruleId":"510","severity":1,"message":"557","line":4,"column":9,"nodeType":"512","messageId":"513","endLine":4,"endColumn":20},{"ruleId":"510","severity":1,"message":"558","line":4,"column":22,"nodeType":"512","messageId":"513","endLine":4,"endColumn":31},{"ruleId":"510","severity":1,"message":"560","line":6,"column":9,"nodeType":"512","messageId":"513","endLine":6,"endColumn":13},{"ruleId":"510","severity":1,"message":"661","line":12,"column":11,"nodeType":"512","messageId":"513","endLine":12,"endColumn":23},{"ruleId":"568","severity":1,"message":"642","line":41,"column":40,"nodeType":"570","messageId":"643","endLine":41,"endColumn":42},{"ruleId":"519","severity":1,"message":"662","line":42,"column":35,"nodeType":"521","messageId":"522","endLine":42,"endColumn":71},{"ruleId":"563","severity":1,"message":"663","line":79,"column":8,"nodeType":"565","endLine":79,"endColumn":10,"suggestions":"664"},{"ruleId":"563","severity":1,"message":"665","line":15,"column":8,"nodeType":"565","endLine":15,"endColumn":10,"suggestions":"666"},{"ruleId":"510","severity":1,"message":"554","line":1,"column":8,"nodeType":"512","messageId":"513","endLine":1,"endColumn":12},{"ruleId":"510","severity":1,"message":"514","line":2,"column":10,"nodeType":"512","messageId":"513","endLine":2,"endColumn":18},{"ruleId":"510","severity":1,"message":"555","line":3,"column":8,"nodeType":"512","messageId":"513","endLine":3,"endColumn":16},{"ruleId":"510","severity":1,"message":"556","line":3,"column":20,"nodeType":"512","messageId":"513","endLine":3,"endColumn":30},{"ruleId":"510","severity":1,"message":"557","line":4,"column":10,"nodeType":"512","messageId":"513","endLine":4,"endColumn":21},{"ruleId":"510","severity":1,"message":"560","line":7,"column":10,"nodeType":"512","messageId":"513","endLine":7,"endColumn":14},{"ruleId":"510","severity":1,"message":"641","line":16,"column":11,"nodeType":"512","messageId":"513","endLine":16,"endColumn":20},{"ruleId":"568","severity":1,"message":"642","line":42,"column":34,"nodeType":"570","messageId":"643","endLine":42,"endColumn":36},{"ruleId":"519","severity":1,"message":"644","line":44,"column":32,"nodeType":"521","messageId":"522","endLine":44,"endColumn":59},{"ruleId":"563","severity":1,"message":"667","line":88,"column":8,"nodeType":"565","endLine":88,"endColumn":10,"suggestions":"668"},{"ruleId":"563","severity":1,"message":"669","line":15,"column":8,"nodeType":"565","endLine":15,"endColumn":20,"suggestions":"670"},{"ruleId":"510","severity":1,"message":"647","line":4,"column":8,"nodeType":"512","messageId":"513","endLine":4,"endColumn":13},{"ruleId":"510","severity":1,"message":"648","line":51,"column":13,"nodeType":"512","messageId":"513","endLine":51,"endColumn":18},{"ruleId":"546","severity":1,"message":"649","line":56,"column":25,"nodeType":"548","messageId":"549","endLine":56,"endColumn":27},{"ruleId":"510","severity":1,"message":"652","line":87,"column":11,"nodeType":"512","messageId":"513","endLine":87,"endColumn":17},{"ruleId":"563","severity":1,"message":"671","line":106,"column":8,"nodeType":"565","endLine":106,"endColumn":10,"suggestions":"672"},{"ruleId":"586","severity":1,"message":"587","line":117,"column":33,"nodeType":"521","endLine":117,"endColumn":80},{"ruleId":"519","severity":1,"message":"653","line":127,"column":37,"nodeType":"521","messageId":"522","endLine":127,"endColumn":110},{"ruleId":"546","severity":1,"message":"547","line":153,"column":69,"nodeType":"548","messageId":"549","endLine":153,"endColumn":71},{"ruleId":"546","severity":1,"message":"547","line":153,"column":107,"nodeType":"548","messageId":"549","endLine":153,"endColumn":109},{"ruleId":"546","severity":1,"message":"547","line":153,"column":145,"nodeType":"548","messageId":"549","endLine":153,"endColumn":147},{"ruleId":"546","severity":1,"message":"547","line":153,"column":182,"nodeType":"548","messageId":"549","endLine":153,"endColumn":184},{"ruleId":"510","severity":1,"message":"511","line":1,"column":20,"nodeType":"512","messageId":"513","endLine":1,"endColumn":29},{"ruleId":"510","severity":1,"message":"539","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":14},{"ruleId":"510","severity":1,"message":"654","line":3,"column":10,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"519","severity":1,"message":"655","line":35,"column":50,"nodeType":"521","messageId":"522","endLine":35,"endColumn":168},{"ruleId":"519","severity":1,"message":"656","line":36,"column":50,"nodeType":"521","messageId":"522","endLine":36,"endColumn":168},{"ruleId":"510","severity":1,"message":"554","line":2,"column":10,"nodeType":"512","messageId":"513","endLine":2,"endColumn":14},{"ruleId":"510","severity":1,"message":"673","line":3,"column":19,"nodeType":"512","messageId":"513","endLine":3,"endColumn":30},{"ruleId":"563","severity":1,"message":"674","line":74,"column":8,"nodeType":"565","endLine":74,"endColumn":10,"suggestions":"675"},{"ruleId":"519","severity":1,"message":"676","line":81,"column":44,"nodeType":"521","messageId":"522","endLine":81,"endColumn":92},{"ruleId":"510","severity":1,"message":"514","line":1,"column":16,"nodeType":"512","messageId":"513","endLine":1,"endColumn":24},{"ruleId":"563","severity":1,"message":"677","line":19,"column":8,"nodeType":"565","endLine":19,"endColumn":10,"suggestions":"678"},{"ruleId":"510","severity":1,"message":"539","line":1,"column":8,"nodeType":"512","messageId":"513","endLine":1,"endColumn":14},{"ruleId":"510","severity":1,"message":"654","line":3,"column":9,"nodeType":"512","messageId":"513","endLine":3,"endColumn":16},{"ruleId":"510","severity":1,"message":"679","line":5,"column":12,"nodeType":"512","messageId":"513","endLine":5,"endColumn":19},{"ruleId":"510","severity":1,"message":"680","line":5,"column":21,"nodeType":"512","messageId":"513","endLine":5,"endColumn":31},{"ruleId":"510","severity":1,"message":"681","line":8,"column":12,"nodeType":"512","messageId":"513","endLine":8,"endColumn":19},{"ruleId":"510","severity":1,"message":"682","line":8,"column":21,"nodeType":"512","messageId":"513","endLine":8,"endColumn":31},{"ruleId":"563","severity":1,"message":"683","line":15,"column":8,"nodeType":"565","endLine":15,"endColumn":10,"suggestions":"684"},{"ruleId":"563","severity":1,"message":"683","line":21,"column":8,"nodeType":"565","endLine":21,"endColumn":26,"suggestions":"685"},{"ruleId":"510","severity":1,"message":"514","line":1,"column":9,"nodeType":"512","messageId":"513","endLine":1,"endColumn":17},{"ruleId":"519","severity":1,"message":"686","line":43,"column":21,"nodeType":"521","messageId":"522","endLine":43,"endColumn":80},{"ruleId":"510","severity":1,"message":"514","line":1,"column":16,"nodeType":"512","messageId":"513","endLine":1,"endColumn":24},{"ruleId":"510","severity":1,"message":"687","line":10,"column":11,"nodeType":"512","messageId":"513","endLine":10,"endColumn":27},{"ruleId":"563","severity":1,"message":"683","line":10,"column":8,"nodeType":"565","endLine":10,"endColumn":10,"suggestions":"688"},{"ruleId":"510","severity":1,"message":"539","line":1,"column":8,"nodeType":"512","messageId":"513","endLine":1,"endColumn":14},{"ruleId":"510","severity":1,"message":"654","line":3,"column":10,"nodeType":"512","messageId":"513","endLine":3,"endColumn":17},{"ruleId":"510","severity":1,"message":"679","line":5,"column":12,"nodeType":"512","messageId":"513","endLine":5,"endColumn":19},{"ruleId":"510","severity":1,"message":"680","line":5,"column":21,"nodeType":"512","messageId":"513","endLine":5,"endColumn":31},{"ruleId":"510","severity":1,"message":"681","line":8,"column":12,"nodeType":"512","messageId":"513","endLine":8,"endColumn":19},{"ruleId":"510","severity":1,"message":"682","line":8,"column":21,"nodeType":"512","messageId":"513","endLine":8,"endColumn":31},{"ruleId":"563","severity":1,"message":"683","line":15,"column":8,"nodeType":"565","endLine":15,"endColumn":10,"suggestions":"689"},{"ruleId":"563","severity":1,"message":"683","line":21,"column":8,"nodeType":"565","endLine":21,"endColumn":26,"suggestions":"690"},{"ruleId":"563","severity":1,"message":"683","line":10,"column":8,"nodeType":"565","endLine":10,"endColumn":10,"suggestions":"691"},{"ruleId":"510","severity":1,"message":"514","line":1,"column":16,"nodeType":"512","messageId":"513","endLine":1,"endColumn":24},{"ruleId":"563","severity":1,"message":"677","line":19,"column":8,"nodeType":"565","endLine":19,"endColumn":10,"suggestions":"692"},{"ruleId":"510","severity":1,"message":"554","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"556","line":4,"column":19,"nodeType":"512","messageId":"513","endLine":4,"endColumn":29},{"ruleId":"510","severity":1,"message":"558","line":5,"column":9,"nodeType":"512","messageId":"513","endLine":5,"endColumn":18},{"ruleId":"619","severity":1,"message":"620","line":10,"column":13,"nodeType":"521","endLine":10,"endColumn":16},{"ruleId":"546","severity":1,"message":"547","line":18,"column":42,"nodeType":"548","messageId":"549","endLine":18,"endColumn":44},{"ruleId":"619","severity":1,"message":"620","line":80,"column":13,"nodeType":"521","endLine":80,"endColumn":16},{"ruleId":"563","severity":1,"message":"624","line":125,"column":8,"nodeType":"565","endLine":125,"endColumn":10,"suggestions":"693"},{"ruleId":"619","severity":1,"message":"620","line":133,"column":21,"nodeType":"521","endLine":133,"endColumn":101},{"ruleId":"619","severity":1,"message":"620","line":139,"column":21,"nodeType":"521","endLine":139,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":148,"column":49,"nodeType":"548","messageId":"549","endLine":148,"endColumn":51},{"ruleId":"519","severity":1,"message":"626","line":149,"column":36,"nodeType":"521","messageId":"522","endLine":149,"endColumn":102},{"ruleId":"546","severity":1,"message":"547","line":153,"column":49,"nodeType":"548","messageId":"549","endLine":153,"endColumn":51},{"ruleId":"519","severity":1,"message":"627","line":154,"column":36,"nodeType":"521","messageId":"522","endLine":154,"endColumn":102},{"ruleId":"510","severity":1,"message":"554","line":2,"column":8,"nodeType":"512","messageId":"513","endLine":2,"endColumn":12},{"ruleId":"510","severity":1,"message":"556","line":4,"column":19,"nodeType":"512","messageId":"513","endLine":4,"endColumn":29},{"ruleId":"510","severity":1,"message":"558","line":5,"column":9,"nodeType":"512","messageId":"513","endLine":5,"endColumn":18},{"ruleId":"619","severity":1,"message":"620","line":10,"column":13,"nodeType":"521","endLine":10,"endColumn":16},{"ruleId":"546","severity":1,"message":"547","line":18,"column":42,"nodeType":"548","messageId":"549","endLine":18,"endColumn":44},{"ruleId":"619","severity":1,"message":"620","line":80,"column":13,"nodeType":"521","endLine":80,"endColumn":16},{"ruleId":"563","severity":1,"message":"624","line":125,"column":8,"nodeType":"565","endLine":125,"endColumn":10,"suggestions":"694"},{"ruleId":"619","severity":1,"message":"620","line":133,"column":21,"nodeType":"521","endLine":133,"endColumn":101},{"ruleId":"619","severity":1,"message":"620","line":139,"column":21,"nodeType":"521","endLine":139,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":148,"column":49,"nodeType":"548","messageId":"549","endLine":148,"endColumn":51},{"ruleId":"519","severity":1,"message":"626","line":149,"column":36,"nodeType":"521","messageId":"522","endLine":149,"endColumn":102},{"ruleId":"546","severity":1,"message":"547","line":153,"column":49,"nodeType":"548","messageId":"549","endLine":153,"endColumn":51},{"ruleId":"519","severity":1,"message":"627","line":154,"column":36,"nodeType":"521","messageId":"522","endLine":154,"endColumn":102},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'logo' is defined but never used.","'Navigate' is defined but never used.","'is_teacher' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component User_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Create_quiz must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component List_quiz must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Answer_quiz must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Admin_page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_list must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_quiz must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Investment_page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Nav_menu must be in PascalCase or SCREAMING_SNAKE_CASE","'ethers' is defined but never used.","'BiLogIn' is defined but never used.","'chainId' is defined but never used.","'rpc' is defined but never used.","'bloctoSDK' is defined but never used.","'quiz_address' is defined but never used.","'token_address' is defined but never used.","'BloctoLogo' is defined but never used.","'Button' is defined but never used.","'currentAccount' is assigned a value but never used.","'use_wallet' is assigned a value but never used.","Imported JSX component Wallet_select must be in PascalCase or SCREAMING_SNAKE_CASE","'parseAbiItem' is defined but never used.","'UnauthorizedProviderError' is defined but never used.","'decodeFunctionResult' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hash2' is assigned a value but never used.","'res2' is assigned a value but never used.","'res' is assigned a value but never used.","'approval' is assigned a value but never used.","'Form' is defined but never used.","'MDEditor' is defined but never used.","'selectWord' is defined but never used.","'resolvePath' is defined but never used.","'useParams' is defined but never used.","'Simple_quiz' is defined but never used.","'Link' is defined but never used.","'containerRef' is assigned a value but never used.","'callback' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cont'. Either include it or remove the dependency array.","ArrayExpression",["695"],"Imported JSX component Quiz_list must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ethereum' is assigned a value but never used.","'mkdStr' is assigned a value but never used.","'useing_address' is assigned a value but never used.","'Set_useing_address' is assigned a value but never used.","'setReward' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'year' is assigned a value but never used.","'month' is assigned a value but never used.","'day' is assigned a value but never used.","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Contract'. Either include it or remove the dependency array.",["696"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component Answer_select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Wait_Modal must be in PascalCase or SCREAMING_SNAKE_CASE","'Login' is defined but never used.","'icons' is defined but never used.","React Hook useEffect has a missing dependency: 'get_variable'. Either include it or remove the dependency array.",["697"],"Imported JSX component User_card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component History_list must be in PascalCase or SCREAMING_SNAKE_CASE","'id' is defined but never used.","React Hook useEffect has a missing dependency: 'props.cont'. Either include it or remove the dependency array. If 'setisteacher' needs the current value of 'props.cont', you can also switch to useReducer instead of useState and read 'props.cont' in the reducer.",["698"],"Imported JSX component Add_students must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Add_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component View_result must be in PascalCase or SCREAMING_SNAKE_CASE","'Container' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'AiFillPropertySafety' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'NavLink' is defined but never used.","'Switch' is defined but never used.","'AiFillHome' is defined but never used.","'AiFillSetting' is defined but never used.","'AiFillStar' is defined but never used.","'Contracts_MetaMask' is defined but never used.","React Hook useEffect has a missing dependency: 'props.cont'. Either include it or remove the dependency array. If 'setChain_id' needs the current value of 'props.cont', you can also switch to useReducer instead of useState and read 'props.cont' in the reducer.",["699"],"Imported JSX component Modal_change_network must be in PascalCase or SCREAMING_SNAKE_CASE",["700"],"'ConstructorFragment' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'example', 'pattern', and 'props.quiz'. Either include them or remove the dependency array.",["701"],"'clean_up' is defined but never used.","React Hook useEffect has a missing dependency: 'get_quiz'. Either include it or remove the dependency array.",["702"],"Imported JSX component Answer_type1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Answer_type2 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Show_correct must be in PascalCase or SCREAMING_SNAKE_CASE","'Answer_select' is defined but never used.","'setId' is assigned a value but never used.","'date_format' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'is_teacher', and 'quiz'. Either include them or remove the dependency array.",["703"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'get_students'. Either include it or remove the dependency array.",["704"],"'location' is assigned a value but never used.","'quiz_list' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Imported JSX component Simple_quiz must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'get_quiz_list', 'observer', 'props.now_numRef', and 'props.targetRef'. Either include them or remove the dependency array.",["705"],"'Modal' is defined but never used.","'count' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'props.quiz'. Either include it or remove the dependency array.",["706"],"'search' is assigned a value but never used.","Imported JSX component Time_diff must be in PascalCase or SCREAMING_SNAKE_CASE","'ImCross' is defined but never used.","Imported JSX component Answer_area1 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Answer_area2 must be in PascalCase or SCREAMING_SNAKE_CASE","'AiOutlineArrowRight' is defined but never used.","'Change_user' is defined but never used.","React Hook useEffect has missing dependencies: 'props.icons', 'props.state', and 'props.user_name'. Either include them or remove the dependency array. If 'Setstate' needs the current value of 'props.state', you can also switch to useReducer instead of useState and read 'props.state' in the reducer.",["707"],"'history_list' is assigned a value but never used.","Imported JSX component Simple_history must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'get_history_list', 'observer', 'props.now_numRef', and 'props.targetRef'. Either include them or remove the dependency array.",["708"],"React Hook useEffect has a missing dependency: 'props.cont'. Either include it or remove the dependency array.",["709"],"React Hook useEffect has missing dependencies: 'get_quiz_list', 'location.search', 'observer', 'props.now_numRef', and 'props.targetRef'. Either include them or remove the dependency array.",["710"],"React Hook useEffect has a missing dependency: 'addStudent_list'. Either include it or remove the dependency array.",["711"],"React Hook useEffect has missing dependencies: 'get_is_payment' and 'props.quiz'. Either include them or remove the dependency array.",["712"],"'CSVDownload' is defined but never used.","React Hook useEffect has missing dependencies: 'get_data_for_survey' and 'props.cont'. Either include them or remove the dependency array.",["713"],"Imported JSX component Create_csvlink must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'overridePopstate'. Either include it or remove the dependency array.",["714"],"'content' is assigned a value but never used.","'SetContent' is assigned a value but never used.","'collect' is assigned a value but never used.","'SetCollect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["715"],["716"],"Imported JSX component Convert_time must be in PascalCase or SCREAMING_SNAKE_CASE","'overridePopstate' is assigned a value but never used.",["717"],["718"],["719"],["720"],["721"],["722"],["723"],{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"730","fix":"732"},{"desc":"724","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"730","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"761","fix":"765"},{"desc":"761","fix":"766"},{"desc":"763","fix":"767"},{"desc":"761","fix":"768"},{"desc":"759","fix":"769"},{"desc":"736","fix":"770"},{"desc":"736","fix":"771"},"Update the dependencies array to be: [cont]",{"range":"772","text":"773"},"Update the dependencies array to be: [Contract]",{"range":"774","text":"775"},"Update the dependencies array to be: [get_variable]",{"range":"776","text":"777"},"Update the dependencies array to be: [props.cont]",{"range":"778","text":"779"},{"range":"780","text":"779"},{"range":"781","text":"773"},"Update the dependencies array to be: [example, pattern, props.quiz]",{"range":"782","text":"783"},"Update the dependencies array to be: [get_quiz]",{"range":"784","text":"785"},"Update the dependencies array to be: [id, is_teacher, quiz]",{"range":"786","text":"787"},"Update the dependencies array to be: [get_students]",{"range":"788","text":"789"},"Update the dependencies array to be: [get_quiz_list, observer, props.now_numRef, props.targetRef]",{"range":"790","text":"791"},"Update the dependencies array to be: [props.quiz, show]",{"range":"792","text":"793"},"Update the dependencies array to be: [props.icons, props.state, props.user_name]",{"range":"794","text":"795"},"Update the dependencies array to be: [get_history_list, observer, props.now_numRef, props.targetRef]",{"range":"796","text":"797"},{"range":"798","text":"779"},"Update the dependencies array to be: [get_quiz_list, location.search, observer, props.now_numRef, props.targetRef]",{"range":"799","text":"800"},"Update the dependencies array to be: [addStudent, addStudent_list]",{"range":"801","text":"802"},"Update the dependencies array to be: [get_is_payment, props.quiz]",{"range":"803","text":"804"},"Update the dependencies array to be: [get_data_for_survey, props.cont]",{"range":"805","text":"806"},"Update the dependencies array to be: [overridePopstate]",{"range":"807","text":"808"},"Update the dependencies array to be: [props]",{"range":"809","text":"810"},"Update the dependencies array to be: [pattern, example, props]",{"range":"811","text":"812"},{"range":"813","text":"810"},{"range":"814","text":"810"},{"range":"815","text":"812"},{"range":"816","text":"810"},{"range":"817","text":"808"},{"range":"818","text":"785"},{"range":"819","text":"785"},[1543,1545],"[cont]",[3969,3971],"[Contract]",[1923,1925],"[get_variable]",[1842,1844],"[props.cont]",[2605,2607],[1735,1737],[2935,2937],"[example, pattern, props.quiz]",[5856,5858],"[get_quiz]",[4060,4062],"[id, is_teacher, quiz]",[2135,2137],"[get_students]",[3018,3020],"[get_quiz_list, observer, props.now_numRef, props.targetRef]",[3290,3296],"[props.quiz, show]",[1415,1417],"[props.icons, props.state, props.user_name]",[2937,2939],"[get_history_list, observer, props.now_numRef, props.targetRef]",[486,488],[3106,3108],"[get_quiz_list, location.search, observer, props.now_numRef, props.targetRef]",[527,539],"[addStudent, addStudent_list]",[3570,3572],"[get_is_payment, props.quiz]",[3085,3087],"[get_data_for_survey, props.cont]",[572,574],"[overridePopstate]",[557,559],"[props]",[741,759],"[pattern, example, props]",[282,284],[561,563],[745,763],[282,284],[572,574],[4258,4260],[4258,4260]]