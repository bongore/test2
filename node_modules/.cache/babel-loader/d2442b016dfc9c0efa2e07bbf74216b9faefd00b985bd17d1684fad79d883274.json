{"ast":null,"code":"import{Contracts_MetaMask}from\"../../contract/contracts\";import Form from\"react-bootstrap/Form\";import{useState,useEffect}from\"react\";import MDEditor,{selectWord}from\"@uiw/react-md-editor\";import{useParams}from\"react-router-dom\";import Button from\"react-bootstrap/Button\";import Wait_Modal from\"../../contract/wait_Modal\";import{ConstructorFragment}from\"ethers/lib/utils\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Show_correct(props){if(props.cont==true){return/*#__PURE__*/_jsxs(\"a\",{children:[\"\\u7B54\\u3048\\u306F\",props.answer]});}else{return/*#__PURE__*/_jsx(_Fragment,{});}}function Answer_type1(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"a\",{children:[/*#__PURE__*/_jsx(\"br\",{}),\"\\u9078\\u629E\\u5F0F\"]}),/*#__PURE__*/_jsx(\"table\",{className:\"table\",children:/*#__PURE__*/_jsx(\"tbody\",{children:props.quiz[6].split(\",\").map(cont=>{let check_box;if(props.answer==cont){check_box=/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:cont,id:\"flexCheckChecked\",onChange:()=>{props.setAnswer(cont);},checked:true});}else{check_box=/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:cont,id:\"flexCheckChecked\",onChange:()=>{props.setAnswer(cont);}});}return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:check_box}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"left\",children:cont})]},cont);})})})]});}function Answer_type2(props){const answer_data=props.quiz[6].split(\",\");const pattern=answer_data[0];const example=answer_data[1];const[error_collect,SetError_Collect]=useState(true);useEffect(()=>{console.log(props.quiz);console.log(pattern);console.log(example);},[]);//正規表現のエラー表示\nconst handle_Test_pattern=(event,target_set)=>{const value=event.target.value;console.log(pattern);// 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\nif(!new RegExp(pattern).test(value)){target_set(true);console.log(\"errr\");}else{target_set(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"a\",{children:\"\\u5165\\u529B\\u5F62\\u5F0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-10\",children:[\"\\u6B63\\u89E3\\u3092\\u5165\\u529B\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u4F8B:\",example]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:props.answer,onChange:event=>{handle_Test_pattern(event,SetError_Collect);props.setAnswer(event.target.value);}}),error_collect?\"エラー\":\"OK\"]})})]});}function Answer_quiz(props){const[answer,setAnswer]=useState();const[now,setnow]=useState(null);const[show,setShow]=useState(false);const[content,setContent]=useState(\"\");const[is_correct_show,setIs_correct_show]=useState(false);let clean_up;let Contract=new Contracts_MetaMask();const id=useParams()[\"id\"];console.log(id);console.log(\"解答の最大数とこれまでに回答した人数\");async function getCorrectLimitAndCorrectCount(id){return await Contract.get_respondentCount_and_respondentLimit(id);}console.log(getCorrectLimitAndCorrectCount(id));const[quiz,setQuiz]=useState(null);const[simple_quiz,setSimple_quiz]=useState(null);const get_quiz=async()=>{setQuiz(await Contract.get_quiz(id));setSimple_quiz(await Contract.get_quiz_simple(id));};const convertFullWidthNumbersToHalf=(()=>{// 全角数字と半角数字の差分を計算\nconst diff=\"０\".charCodeAt(0)-\"0\".charCodeAt(0);// 置換関数を返す\nreturn text=>text.replace(/[０-９]/g,m=>String.fromCharCode(m.charCodeAt(0)-diff));})();const create_answer=async()=>{if(quiz[15]==true){setIs_correct_show(true);return;}if(parseInt(quiz[8]).toString()<=now){const res=Contract.create_answer(id,convertFullWidthNumbersToHalf(answer),setShow,setContent);}else{alert(\"まだ回答開始時間になっていません\");}};useEffect(()=>{get_quiz();setnow(Math.floor(new Date().getTime()/1000));},[]);if(quiz&&simple_quiz){// console.log(quiz)\n// console.log(simple_quiz)\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:\"50px\"},children:Number(simple_quiz[\"state\"])==0?\"初回の回答です。正解するとトークンがもらえます\":Number(simple_quiz[\"state\"])==1?\"初回の回答で間違えています。正解してもトークンはもらえません\":Number(simple_quiz[\"state\"])==2?\"正解しています\":\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{\"text-align\":\"left\",\"margin-bottom\":\"50px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:quiz[2]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"a\",{style:{\"white-space\":\"pre-wrap\",\"font-size\":\"14px\",\"line-height\":\"1\"},children:[/*#__PURE__*/_jsx(\"br\",{}),quiz[3]]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"a\",{children:[\"\\u51FA\\u984C\\u8005:\",quiz[1]]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{\"data-color-mode\":\"light\",className:\"left\",style:{\"text-align\":\"left\"},children:/*#__PURE__*/_jsx(MDEditor.Markdown,{source:quiz[5]})}),(()=>{if(Number(quiz[13])==0){return/*#__PURE__*/_jsx(Answer_type1,{quiz:quiz,answer:answer,setAnswer:setAnswer});}})(),(()=>{if(Number(quiz[13])==1){return/*#__PURE__*/_jsx(Answer_type2,{quiz:quiz,answer:answer,setAnswer:setAnswer});}})(),/*#__PURE__*/_jsx(\"div\",{class:\"d-flex justify-content-end\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:create_answer,children:\"\\u56DE\\u7B54\"})}),Number(quiz[13]),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Show_correct,{cont:is_correct_show,answer:quiz[14]})]}),/*#__PURE__*/_jsx(Wait_Modal,{showFlag:show,content:content})]});}else{/*#__PURE__*/_jsx(_Fragment,{});}}export default Answer_quiz;","map":{"version":3,"names":["Contracts_MetaMask","Form","useState","useEffect","MDEditor","selectWord","useParams","Button","Wait_Modal","ConstructorFragment","jsxs","_jsxs","Fragment","_Fragment","jsx","_jsx","Show_correct","props","cont","children","answer","Answer_type1","className","quiz","split","map","check_box","type","value","id","onChange","setAnswer","checked","scope","Answer_type2","answer_data","pattern","example","error_collect","SetError_Collect","console","log","handle_Test_pattern","event","target_set","target","RegExp","test","Answer_quiz","now","setnow","show","setShow","content","setContent","is_correct_show","setIs_correct_show","clean_up","Contract","getCorrectLimitAndCorrectCount","get_respondentCount_and_respondentLimit","setQuiz","simple_quiz","setSimple_quiz","get_quiz","get_quiz_simple","convertFullWidthNumbersToHalf","diff","charCodeAt","text","replace","m","String","fromCharCode","create_answer","parseInt","toString","res","alert","Math","floor","Date","getTime","style","margin","Number","Markdown","source","class","variant","onClick","showFlag"],"sources":["C:/Users/takap/OneDrive - Chiba Institute of Technology/デスクトップ/web3-sotuken/src/pages/answer_quiz/answer_quiz.jsx"],"sourcesContent":["import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Wait_Modal from \"../../contract/wait_Modal\";\r\nimport { ConstructorFragment } from \"ethers/lib/utils\";\r\nfunction Show_correct(props){\r\n    if(props.cont == true){\r\n        return (\r\n            <a>答えは{props.answer}</a>\r\n        );\r\n    }else{\r\n        return <></>;\r\n    }\r\n}\r\nfunction Answer_type1(props) {\r\n    return (\r\n        <>\r\n            <a>\r\n                <br />\r\n                選択式\r\n            </a>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {props.quiz[6].split(\",\").map((cont) => {\r\n                        let check_box;\r\n                        if (props.answer == cont) {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                    checked\r\n                                />\r\n                            );\r\n                        } else {\r\n                            check_box = (\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    value={cont}\r\n                                    id=\"flexCheckChecked\"\r\n                                    onChange={() => {\r\n                                        props.setAnswer(cont);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        }\r\n                        return (\r\n                            <tr key={cont}>\r\n                                <th scope=\"col\">{check_box}</th>\r\n\r\n                                <th scope=\"col\" className=\"left\">\r\n                                    {cont}\r\n                                </th>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer_type2(props) {\r\n    const answer_data = props.quiz[6].split(\",\");\r\n    const pattern = answer_data[0];\r\n    const example = answer_data[1];\r\n    const [error_collect, SetError_Collect] = useState(true);\r\n    useEffect(() => {\r\n        console.log(props.quiz);\r\n        console.log(pattern);\r\n        console.log(example);\r\n    }, []);\r\n\r\n    //正規表現のエラー表示\r\n    const handle_Test_pattern = (event, target_set) => {\r\n        const value = event.target.value;\r\n\r\n        console.log(pattern);\r\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\r\n        if (!new RegExp(pattern).test(value)) {\r\n            target_set(true);\r\n            console.log(\"errr\");\r\n        } else {\r\n            target_set(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <a>入力形式</a>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    正解を入力\r\n                    <br />\r\n                    <p>例:{example}</p>\r\n                    {/* 1行のみのフォームにしたい */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={props.answer}\r\n                        onChange={(event) => {\r\n                            handle_Test_pattern(event, SetError_Collect);\r\n                            props.setAnswer(event.target.value);\r\n                        }}\r\n                    />\r\n                    {error_collect ? \"エラー\" : \"OK\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Answer_quiz(props) {\r\n    const [answer, setAnswer] = useState();\r\n    const [now, setnow] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [content, setContent] = useState(\"\");\r\n    const [is_correct_show, setIs_correct_show] = useState(false);\r\n    let clean_up;\r\n\r\n    let Contract = new Contracts_MetaMask();\r\n    const id = useParams()[\"id\"];\r\n    console.log(id);\r\n    console.log(\"解答の最大数とこれまでに回答した人数\");\r\n    async function getCorrectLimitAndCorrectCount(id) {\r\n        return (await Contract.get_respondentCount_and_respondentLimit(id));\r\n    }\r\n\r\n    console.log(getCorrectLimitAndCorrectCount(id));\r\n\r\n    const [quiz, setQuiz] = useState(null);\r\n    const [simple_quiz, setSimple_quiz] = useState(null);\r\n\r\n    const get_quiz = async () => {\r\n        setQuiz(await Contract.get_quiz(id));\r\n        setSimple_quiz(await Contract.get_quiz_simple(id));\r\n    };\r\n\r\n    const convertFullWidthNumbersToHalf = (()=>{\r\n        // 全角数字と半角数字の差分を計算\r\n        const diff = \"０\".charCodeAt(0) - \"0\".charCodeAt(0);\r\n\r\n            // 置換関数を返す\r\n        return text => text.replace(\r\n                    /[０-９]/g\r\n                    ,m=>String.fromCharCode( m.charCodeAt(0) - diff )\r\n        ); \r\n    })();\r\n\r\n    const create_answer = async () => {\r\n        if (quiz[15] == true){\r\n            setIs_correct_show(true);\r\n            return;\r\n        }\r\n        if (parseInt(quiz[8]).toString() <= now) {\r\n            const res = Contract.create_answer(id, convertFullWidthNumbersToHalf(answer), setShow, setContent);\r\n        } else {\r\n            alert(\"まだ回答開始時間になっていません\");\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        get_quiz();\r\n        setnow(Math.floor(new Date().getTime() / 1000));\r\n    }, []);\r\n\r\n    if (quiz && simple_quiz) {\r\n        // console.log(quiz)\r\n        // console.log(simple_quiz)\r\n        return (\r\n            <>\r\n                <h3 style={{ margin: \"50px\" }}>{Number(simple_quiz[\"state\"]) == 0 ? \"初回の回答です。正解するとトークンがもらえます\" : Number(simple_quiz[\"state\"]) == 1 ? \"初回の回答で間違えています。正解してもトークンはもらえません\" : Number(simple_quiz[\"state\"]) == 2 ? \"正解しています\" : \"\"}</h3>\r\n                <div className=\"container\" style={{ \"text-align\": \"left\", \"margin-bottom\": \"50px\" }}>\r\n                    <h2>{quiz[2]}</h2>\r\n                    <br />\r\n                    <a style={{ \"white-space\": \"pre-wrap\", \"font-size\": \"14px\", \"line-height\": \"1\" }}>\r\n                        <br />\r\n                        {quiz[3]}\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    <a>出題者:{quiz[1]}</a>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div data-color-mode=\"light\" className=\"left\" style={{ \"text-align\": \"left\" }}>\r\n                        <MDEditor.Markdown source={quiz[5]} />\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (Number(quiz[13]) == 0) {\r\n                            return <Answer_type1 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n                    {(() => {\r\n                        if (Number(quiz[13]) == 1) {\r\n                            return <Answer_type2 quiz={quiz} answer={answer} setAnswer={setAnswer} />;\r\n                        }\r\n                    })()}\r\n\r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <Button variant=\"primary\" onClick={create_answer}>\r\n                            回答\r\n                        </Button>\r\n                    </div>\r\n                    {Number(quiz[13])}<br />\r\n                    <Show_correct cont={is_correct_show} answer={quiz[14]}/>\r\n                </div>\r\n                <Wait_Modal showFlag={show} content={content} />\r\n            </>\r\n        );\r\n    } else {\r\n        <></>;\r\n    }\r\n}\r\nexport default Answer_quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}