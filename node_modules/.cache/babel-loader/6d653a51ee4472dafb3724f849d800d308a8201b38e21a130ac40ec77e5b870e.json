{"ast":null,"code":"import Form from\"react-bootstrap/Form\";import{useState,useEffect,useRef}from\"react\";import MDEditor,{selectWord}from\"@uiw/react-md-editor\";import{resolvePath,useLocation}from\"react-router-dom\";import Simple_quiz from\"./quiz_simple\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";function Quiz_list(props){const location=useLocation();//画面を満たす個数を計算して、add_numに代入\nconst add_num=useRef(Math.floor(window.innerHeight/100)+2);//表示するクイズのリスト\n// const [quiz_list,Set_quiz_list] =useState([]);\nconst quiz_list=props.quiz_list;const Set_quiz_list=props.Set_quiz_list;//クイズのリストを取得\nconst get_quiz_list=async now=>{//追加分のクイズ用のリスト\nlet add_quiz_list=[];//クイズの総数を超えていたら\nif(now-add_num.current<0){//now_numからquiz_numまでのクイズを取得\nadd_quiz_list=await props.cont.get_quiz_list(now,0);//now_numを0にする\nprops.now_numRef.current=0;}else{//クイズの総数を超えていなかったら\n//now_numからnow_num+add_numまでのクイズを取得\nadd_quiz_list=await props.cont.get_quiz_list(now,now-add_num.current);//now_numをnow_num+add_numにする\nprops.now_numRef.current=now-add_num.current;}//new_quiz_listをmapで展開して、quiz_listに追加\nlet now_quiz_list=[];//add_quiz_listをmapで展開して、now_quiz_listに追加\nadd_quiz_list.map(quiz=>{now_quiz_list.push(/*#__PURE__*/_jsx(Simple_quiz,{quiz:quiz}));//DOMとして追加\n});//quiz_listにnow_quiz_listを追加\n//console.log([...quiz_list, ...now_quiz_list]);\nSet_quiz_list(quiz_list=>[...quiz_list,...now_quiz_list]);};const options={root:null,// ビューポートをルートとする\nrootMargin:\"-10px\",// ビューポートに対するマージン\nthreshold:0// ターゲット要素が完全にビューポートに入った時にコールバックを実行\n};const observer=new IntersectionObserver(entries=>{for(const entry of entries){if(entry.isIntersecting){// ターゲット要素がビューポートに入った時の処理\nconsole.log(\"ターゲット要素がビューポートに入りました。\");get_quiz_list(props.now_numRef.current);}else{// ターゲット要素がビューポートから出た時の処理\nconsole.log(\"ターゲット要素がビューポートから出ました。\");}}},options);useEffect(()=>{//console.log(location.search);\nconst targetElement=props.targetRef.current;// ターゲット要素を取得\nif(targetElement){observer.observe(targetElement);// ターゲット要素をobserve\n// 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\nif(targetElement.isIntersecting){console.log(\"ターゲット要素がビューポートに入っていました。\");get_quiz_list(props.now_numRef.current);}}return()=>{observer.unobserve(targetElement);// コンポーネントがアンマウントされる際にunobserve\n};//パラメータを取得\n},[]);// []を指定して初期状態のみで実行されるようにする\n}export default Quiz_list;","map":{"version":3,"names":["Form","useState","useEffect","useRef","MDEditor","selectWord","resolvePath","useLocation","Simple_quiz","Link","jsx","_jsx","Quiz_list","props","location","add_num","Math","floor","window","innerHeight","quiz_list","Set_quiz_list","get_quiz_list","now","add_quiz_list","current","cont","now_numRef","now_quiz_list","map","quiz","push","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","console","log","targetElement","targetRef","observe","unobserve"],"sources":["C:/Users/takap/OneDrive - Chiba Institute of Technology/デスクトップ/web3-sotuken/src/pages/list_quiz/components/quiz_list.jsx"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useLocation } from \"react-router-dom\";\r\nimport Simple_quiz from \"./quiz_simple\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nfunction Quiz_list(props) {\r\n    const location = useLocation();\r\n    //画面を満たす個数を計算して、add_numに代入\r\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\r\n\r\n    //表示するクイズのリスト\r\n    // const [quiz_list,Set_quiz_list] =useState([]);\r\n\r\n    const quiz_list = props.quiz_list;\r\n    const Set_quiz_list = props.Set_quiz_list;\r\n\r\n    //クイズのリストを取得\r\n    const get_quiz_list = async (now) => {\r\n        //追加分のクイズ用のリスト\r\n        let add_quiz_list = [];\r\n\r\n        //クイズの総数を超えていたら\r\n        if (now - add_num.current < 0) {\r\n            //now_numからquiz_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_list(now, 0);\r\n            //now_numを0にする\r\n            props.now_numRef.current = 0;\r\n        } else {\r\n            //クイズの総数を超えていなかったら\r\n            //now_numからnow_num+add_numまでのクイズを取得\r\n            add_quiz_list = await props.cont.get_quiz_list(now, now - add_num.current);\r\n            //now_numをnow_num+add_numにする\r\n            props.now_numRef.current = now - add_num.current;\r\n        }\r\n        //new_quiz_listをmapで展開して、quiz_listに追加\r\n        let now_quiz_list = [];\r\n\r\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\r\n        add_quiz_list.map((quiz) => {\r\n            now_quiz_list.push(<Simple_quiz quiz={quiz} />); //DOMとして追加\r\n        });\r\n\r\n        //quiz_listにnow_quiz_listを追加\r\n        //console.log([...quiz_list, ...now_quiz_list]);\r\n        Set_quiz_list((quiz_list) => [...quiz_list, ...now_quiz_list]);\r\n    };\r\n\r\n    const options = {\r\n        root: null, // ビューポートをルートとする\r\n        rootMargin: \"-10px\", // ビューポートに対するマージン\r\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        for (const entry of entries) {\r\n            if (entry.isIntersecting) {\r\n                // ターゲット要素がビューポートに入った時の処理\r\n                console.log(\"ターゲット要素がビューポートに入りました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            } else {\r\n                // ターゲット要素がビューポートから出た時の処理\r\n                console.log(\"ターゲット要素がビューポートから出ました。\");\r\n            }\r\n        }\r\n    }, options);\r\n\r\n    useEffect(() => {\r\n        //console.log(location.search);\r\n\r\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\r\n        if (targetElement) {\r\n            observer.observe(targetElement); // ターゲット要素をobserve\r\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\r\n            if (targetElement.isIntersecting) {\r\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\r\n                get_quiz_list(props.now_numRef.current);\r\n            }\r\n        }\r\n        return () => {\r\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\r\n        };\r\n\r\n        //パラメータを取得\r\n    }, []); // []を指定して初期状態のみで実行されるようにする\r\n}\r\nexport default Quiz_list;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}