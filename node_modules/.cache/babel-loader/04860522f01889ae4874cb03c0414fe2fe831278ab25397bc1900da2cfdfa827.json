{"ast":null,"code":"import{Contracts_MetaMask}from\"../../contract/contracts\";import Form from\"react-bootstrap/Form\";import{useState,useEffect,useRef}from\"react\";import MDEditor,{selectWord}from\"@uiw/react-md-editor\";import{resolvePath,useParams}from\"react-router-dom\";import Simple_quiz from\"./components/quiz_simple\";import Quiz_list from\"./components/quiz_list\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function List_quiz_top(props){//クイズのコントラクト\nlet cont=new Contracts_MetaMask();//現在表示している個数を保持するref\nconst now_numRef=useRef(0);//保存\n//クイズの総数\nconst[quiz_sum,Set_quiz_sum]=useState(null);//保存\n//表示するクイズのリスト\nconst[quiz_list,Set_quiz_list]=useState([]);//保存\n//１回の更新で追加で表示する個数\nconst[add_num,Set_add_num]=useState(7);// コンテナのrefを作成\nconst containerRef=useRef(null);const callback=(entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){// ターゲットの<div>が画面に表示された場合に実行される関数\nconsole.log(\"Target div is visible on the screen!\");// ここに実行したい関数を記述\n// console.log(\"///////\",now_num);\n}});};useEffect(()=>{cont.get_quiz_lenght().then(data=>{// Promise オブジェクトが解決された後の処理を記述\nconsole.log(Number(data));let now=parseInt(Number(data));Set_quiz_sum(now);now_numRef.current=now;});},[]);const targetRef=useRef(null);// ターゲット要素のrefを作成\nif(quiz_sum!=null){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Quiz_list,{cont:cont,add_num:add_num,Set_add_num:Set_add_num,quiz_sum:quiz_sum,Set_quiz_sum:Set_quiz_sum,quiz_list:quiz_list,Set_quiz_list:Set_quiz_list,targetRef:targetRef,now_numRef:now_numRef}),quiz_list.map((quiz,index)=>{if(index!==quiz_list.length-add_num){return/*#__PURE__*/_jsx(_Fragment,{children:quiz_list[index]});}}),/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:\"now_loading\"})]});}else{return/*#__PURE__*/_jsx(_Fragment,{});}}export default List_quiz_top;","map":{"version":3,"names":["Contracts_MetaMask","Form","useState","useEffect","useRef","MDEditor","selectWord","resolvePath","useParams","Simple_quiz","Quiz_list","Link","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","List_quiz_top","props","cont","now_numRef","quiz_sum","Set_quiz_sum","quiz_list","Set_quiz_list","add_num","Set_add_num","containerRef","callback","entries","observer","forEach","entry","isIntersecting","console","log","get_quiz_lenght","then","data","Number","now","parseInt","current","targetRef","children","map","quiz","index","length","ref"],"sources":["C:/Users/takap/OneDrive - Chiba Institute of Technology/デスクトップ/web3-sotuken/src/pages/list_quiz/list_quiz_top.jsx"],"sourcesContent":["import { Contracts_MetaMask } from \"../../contract/contracts\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor, { selectWord } from \"@uiw/react-md-editor\";\r\nimport { resolvePath, useParams } from \"react-router-dom\";\r\nimport Simple_quiz from \"./components/quiz_simple\";\r\nimport Quiz_list from \"./components/quiz_list\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction List_quiz_top(props) {\r\n    //クイズのコントラクト\r\n    let cont = new Contracts_MetaMask();\r\n\r\n    //現在表示している個数を保持するref\r\n    const now_numRef = useRef(0); //保存\r\n    //クイズの総数\r\n    const [quiz_sum, Set_quiz_sum] = useState(null); //保存\r\n\r\n    //表示するクイズのリスト\r\n    const [quiz_list, Set_quiz_list] = useState([]); //保存\r\n    //１回の更新で追加で表示する個数\r\n    const [add_num, Set_add_num] = useState(7);\r\n    // コンテナのrefを作成\r\n    const containerRef = useRef(null);\r\n\r\n    const callback = (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                // ターゲットの<div>が画面に表示された場合に実行される関数\r\n                console.log(\"Target div is visible on the screen!\");\r\n                // ここに実行したい関数を記述\r\n\r\n                // console.log(\"///////\",now_num);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        cont.get_quiz_lenght().then((data) => {\r\n            // Promise オブジェクトが解決された後の処理を記述\r\n            console.log(Number(data));\r\n            let now = parseInt(Number(data));\r\n            Set_quiz_sum(now);\r\n            now_numRef.current = now;\r\n        });\r\n    }, []);\r\n\r\n    const targetRef = useRef(null); // ターゲット要素のrefを作成\r\n\r\n    if (quiz_sum != null) {\r\n        return (\r\n            <>\r\n                {/* スクロールを監視するコンポーネント */}\r\n                <Quiz_list cont={cont} add_num={add_num} Set_add_num={Set_add_num} quiz_sum={quiz_sum} Set_quiz_sum={Set_quiz_sum} quiz_list={quiz_list} Set_quiz_list={Set_quiz_list} targetRef={targetRef} now_numRef={now_numRef} />\r\n\r\n                {/* */}\r\n                {quiz_list.map((quiz, index) => {\r\n                    if (index !== quiz_list.length - add_num) {\r\n                        return <>{quiz_list[index]}</>;\r\n                    }\r\n                })}\r\n                <div ref={targetRef}>\r\n                    {/* ターゲット要素aの内容 */}\r\n                    now_loading\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\nexport default List_quiz_top;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}